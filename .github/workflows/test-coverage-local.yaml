# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# also derived from https://github.com/we-cli/coverage-badge-action
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage-local

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Cache C++ and R dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/R
            ~/.local/share/R
          key: dependencies-${{ runner.os }}-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            dependencies-${{ runner.os }}-

      - name: Test coverage
        run: >
          Rscript -e
          "covd<-covr::coverage_to_list()$totalcoverage;
          write.table(covd[length(covd)], file = '${{ github.workspace }}/cov_patch.Rout', row.names = F, col.names = F);
          cov_current<-readLines('tests/testdata/coverage/cov_current.Rout');
          write.table(cov_current, file = '${{ github.workspace }}/cov_current.Rout')"
        shell: bash

      - name: Get Values
        id: get-values
        shell: bash
        run: |
          COV_PATCH=$(cat ${{ github.workspace }}/cov_patch.Rout)
          echo "::set-output name=cov_patch::$COV_PATCH"
          echo "cov_patch=$COV_PATCH"
          COV_CURRENT=$(cat ${{ github.workspace }}/cov_current.Rout)
          echo "::set-output name=cov_current::$COV_CURRENT"
          echo "cov_current=$COV_CURRENT"

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Patch comparison
        id: patch-comparison
        run: |
          cov_patch="${{ env.cov_patch }}"
          cov_current="${{ env.cov_current }}"

          echo "cov_patch: $cov_patch"
          echo "cov_current: $cov_current"

          if [ -z "$cov_patch" ] || [ -z "$cov_current" ]; then
            echo "Error: One or both of the coverage values is empty."
            exit 1
          fi

          if (( $(echo "$cov_patch >= $cov_current" | bc -l) )); then
            echo "Patch coverage ($cov_patch) is greater than or equal to current coverage ($cov_current)."
          else
            echo "Patch coverage ($cov_patch) is less than current coverage ($cov_current)."
            exit 1
          fi
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}

      - name: Overwrite cov_current.Rout
        uses: DamianReeves/write-file-action@master
        with:
          path: tests/testdata/coverage/cov_current.Rout
          write-mode: overwrite
          contents: ${{ steps.get-values.outputs.cov_patch }}

      - name: Create Badges
        shell: bash
        run: |
          npm i -g badgen-cli
          export COV=${{ steps.get-values.outputs.cov_patch }}
          COLOR=$(node -p '+process.env.COV >= 95 ? `green` : `orange`')
          mkdir -p badges
          badgen -j cov_patch -s $COV% -c $COLOR > badges/coverage.svg
  
      - name: Deploy Badges
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update badges [skip ci]"
          branch: gh-pages
          skip_fetch: true
          skip_checkout: true
  
      # Without this, will get Error:
      # Can't find 'action.yml', 'action.yaml' or 'Dockerfile' under '/home/runner/work/coverage-badge-action/coverage-badge-action/action.yml'.
      # Did you forget to run actions/checkout before running your local action?
      - name: Checkout Back
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}  
