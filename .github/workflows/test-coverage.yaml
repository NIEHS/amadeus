# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      COVR_REPORT_FILE: 'coverage.json' # Change this to your coverage report file name
      REPO_NAME: 'yourusername/yourrepository' # Change this to your repository name
      COVERAGE_BADGE_PATH: 'README.md' # Change this to the path of your README file

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::tictoc
            any::units
            any::knitr
            any::rmarkdown
          needs: coverage

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package

      - name: Generate coverage badge
        run: |
          COVERAGE=$(jq -r '.result.coverage' ${{ env.COVERAGE_REPORT_FILE }})
          echo "Current coverage: $COVERAGE%"
          sed -i "s|![Coverage](.*)|![Coverage](https://img.shields.io/badge/coverage-${COVERAGE}%25-brightgreen.svg)|" ${{ env.COVERAGE_BADGE_PATH }}
        shell: bash

      - name: Commit and push updated README
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add ${{ env.COVERAGE_BADGE_PATH }}
          git commit -m "Update coverage badge [skip ci]"
          git push origin HEAD:${{ github.ref }}
        if: always()
