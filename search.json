[{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"download_data() and NASA EarthData Account","text":"data_download() function developed improve researchers’ access publicly available geospatial datasets. Although data already available online, using web browser manually download hundreds thousands data files slow, arduous, (efficiently) repeatable. Additionally, users may familiar creating download recipes Bash (Unix shell), data_download() allows researchers download data directly R, common coding language field environmental health research. Finally, function-izing data downloads useful repeated code automated analysis pipelines.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"data_download","dir":"Articles","previous_headings":"","what":"data_download()","title":"download_data() and NASA EarthData Account","text":"data_download() capable accessing downloading geospatial datasets, collections, variables variety sources. wrapper function calls source-specific data download functions, utilizing unique combination input parameters, host URL, naming convention, data formats. Source-Specific Download Functions Sources important note data_download() calls source-specific function based dataset_name = parameter. Using source-specific function directly return exact data (parameters ), data_download() may beneficial using loop download data various sources. example, download_data(dataset_name = \"hms\", ...) return data download_hms_data(...) assuming ... indicates parameters.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"parameters","dir":"Articles","previous_headings":"data_download()","what":"Parameters","title":"download_data() and NASA EarthData Account","text":"User-defined parameters differ based data source. Required parameters source can checked names(formals()). two functions different required parameters download_hms_data() uses daily temporal resolution download_narr_monolevel_data() uses yearly, share common, standard parameters.","code":"names(formals(download_hms_data)) ##  [1] \"data_format\"           \"date_start\"            \"date_end\"              ##  [4] \"directory_to_download\" \"directory_to_save\"     \"acknowledgement\"       ##  [7] \"download\"              \"remove_command\"        \"unzip\"                 ## [10] \"remove_zip\" names(formals(download_narr_monolevel_data)) ## [1] \"variables\"         \"year_start\"        \"year_end\"          ## [4] \"directory_to_save\" \"acknowledgement\"   \"download\"          ## [7] \"remove_command\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"standard-parameters","dir":"Articles","previous_headings":"data_download() > Parameters","what":"Standard parameters","title":"download_data() and NASA EarthData Account","text":"Four parameters included data download functions. Additionally, dataset_name = parameter must specified using data_download(), assumed using source-specific download function.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"function-structure","dir":"Articles","previous_headings":"data_download()","what":"Function Structure","title":"download_data() and NASA EarthData Account","text":"Although source-specific download function unique, follow general structure. following chunks code adopted download_hms_data() demonstrate functions’ structure. 1. Clean Parameters 2. Generate Download URLs 3. Generate download file names 4. Initiate “…commands.txt” 5. Concatenate download commands 6. Finalize “…commands.txt” 7. Run commands “…commands.txt” 8. Zip files (applicable)","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"clean-parameters","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"1. Clean parameters","title":"download_data() and NASA EarthData Account","text":"Cleaning user-defined parameters highly dependent parameters desired URL created. common parameter cleaning step creating date-time sequence based given temporal range required format, case YYYYMMDD.","code":"# user defined parameters date_start <- \"2023-12-28\" date_end <- \"2024-01-02\" date_sequence <- seq(   as.Date(date_start, format = \"%Y-%m-%d\"),   as.Date(date_end, format = \"%Y-%m-%d\"),   \"day\" ) date_sequence <- gsub(\"-\", \"\", as.character(date_sequence)) date_sequence ## [1] \"20231228\" \"20231229\" \"20231230\" \"20231231\" \"20240101\" \"20240102\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"generate-download-urls","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"2. Generate download URLs","title":"download_data() and NASA EarthData Account","text":"URL base pattern identified manually inspecting download link source-specific web page. download_hms_data() utilizes year, month, date, data format generate download url. download URL created date date_sequence based fixed pattern.","code":"# user defined parameters data_format <- \"Shapefile\" suffix <- \".zip\" urls <- NULL for (d in seq_along(date_sequence)) {   year <- substr(date_sequence[d], 1, 4)   month <- substr(date_sequence[d], 5, 6)   base <- \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/\"   url <- paste0(     base,     data_format,     \"/\",     year,     \"/\",     month,     \"/hms_smoke\",     date_sequence[d],     suffix   )   urls <- c(urls, url) } urls ## [1] \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/Shapefile/2023/12/hms_smoke20231228.zip\" ## [2] \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/Shapefile/2023/12/hms_smoke20231229.zip\" ## [3] \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/Shapefile/2023/12/hms_smoke20231230.zip\" ## [4] \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/Shapefile/2023/12/hms_smoke20231231.zip\" ## [5] \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/Shapefile/2024/01/hms_smoke20240101.zip\" ## [6] \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/Shapefile/2024/01/hms_smoke20240102.zip\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"generate-download-file-names","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"3. Generate download file names","title":"download_data() and NASA EarthData Account","text":"generation download file names also follows fixed pattern, typically combination user-defined download directory, dataset name, spatiotemporal characteristic, data type, , applicable, specific variable name. Unlike download URLs, download file names can defined way writer function, using previously defined characteristics useful identification. download URL created date date_sequence based fixed pattern.","code":"# user defined parameters directory_to_download <- \"./data/\" download_file_names <- NULL for (d in seq_along(date_sequence)) {   download_file_name <- paste0(     directory_to_download,     \"hms_smoke_\",     data_format,     \"_\",     date_sequence[d],     suffix   )   download_file_names <- c(download_file_names, download_file_name) } download_file_names ## [1] \"./data/hms_smoke_Shapefile_20231228.zip\" ## [2] \"./data/hms_smoke_Shapefile_20231229.zip\" ## [3] \"./data/hms_smoke_Shapefile_20231230.zip\" ## [4] \"./data/hms_smoke_Shapefile_20231231.zip\" ## [5] \"./data/hms_smoke_Shapefile_20240101.zip\" ## [6] \"./data/hms_smoke_Shapefile_20240102.zip\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"initiate-commands-txt","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"4. Initiate “…commands.txt”","title":"download_data() and NASA EarthData Account","text":"important aspect data download function sink()...cat()...sink() structure. Rather using utils::download.file() function, text file created store download commands generated URLs file names. structure utilized several reasons: Consistent structure source-specific download functions. download.file() function accept vectors URLs destination files downloading. additional loop download data increase function complexity may reduce performance. Writing commands Bash (Unix shell) script allows specific arguments flags. Storing download URLs without immediately running download allows unit testing URL checking (Unit Tests). text file containing download commands named based dataset, temporal range, data transfer method. Create sink text file.","code":"commands_txt <- paste0(   directory_to_download,   \"hms_smoke_\",   head(date_sequence, n = 1),   \"_\",   tail(date_sequence, n = 1),   \"_curl_commands.txt\" ) sink(commands_txt)"},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"concatenate-download-commands","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"5. Concatenate download commands","title":"download_data() and NASA EarthData Account","text":"Linux-based download commands written according data transfer method, download URL, download file name, additional arguments. additional arguments included, order, depend data transfer method URL type. information curl wget, two data transfer methods utilized data download functions, see curl.1 man page GNU Wget 1.21.1-dirty Manual (latest version January 8, 2024). cat() function store download commands written loop previously sunk commands text file (commands_txt).","code":"for (d in seq_along(date_sequence)) {   download_comamnd <- paste0(     \"curl -s -o \",     download_file_names[d],     \" --url \",     urls[d],     \"\\n\"   )   cat(download_comamnd) }"},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"finalize-commands-txt","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"6. Finalize “…commands.txt”","title":"download_data() and NASA EarthData Account","text":"download commands concatenated commands text file, second sink() command run finalize file stop appending R output.","code":"sink()"},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"run-commands-in-commands-txt","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"7. Run commands in “…commands.txt”","title":"download_data() and NASA EarthData Account","text":"“system command” must created run download commands stored commands text file. bash script, . indicates run commands within given script. case, run commands within commands text file. Running system_command deploys “helper function”, download_run(), function created reduce repeated code across source-specific download functions. function takes two parameters, system_command =, indicates command run, download =, user-defined logical parameter. data download initiated running download_run() system command identified download = TRUE. Checking download directory shows requested files downloaded.","code":"system_command <- paste0(   \". \",   commands_txt,   \"\\n\" ) system_command ## [1] \". ./data/hms_smoke_20231228_20240102_curl_commands.txt\\n\" download_run <- function(     download = FALSE,     system_command = NULL) {   if (download == TRUE) {     cat(paste0(\"Downloading requested files...\\n\"))     system(command = system_command)     cat(paste0(\"Requested files have been downloaded.\\n\"))   } else {     cat(paste0(\"Skipping data download.\\n\"))     return(NULL)   } } download_run(   download = TRUE,   system_command = system_command ) list.files(path = directory_to_download) ## [1] \"hms_smoke_Shapefile_20231228.zip\" \"hms_smoke_Shapefile_20231229.zip\" ## [3] \"hms_smoke_Shapefile_20231230.zip\" \"hms_smoke_Shapefile_20231231.zip\" ## [5] \"hms_smoke_Shapefile_20240101.zip\" \"hms_smoke_Shapefile_20240102.zip\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"zip-files-if-applicable","dir":"Articles","previous_headings":"data_download() > Function Structure","what":"8. Zip files (if applicable)","title":"download_data() and NASA EarthData Account","text":"source-specific data download functions follow general pattern, functions download zip files require additional steps inflate remove downloaded zip files, desired. two steps run helper functions, run user-defined unzip = remove_zip = parameters data_download(). download_unzip() inflates zip files unzip = TRUE, skips inflation unzip = FALSE. download_remove_zips() removes downloaded zip files remove = TRUE, skips removal remove = FALSE. demonstration unzip (inflate) downloaded zip files delete . Listing files shows contents zip files inflated zip files retained. download function structured successfully.","code":"download_unzip <-   function(file_name,            directory_to_unzip,            unzip = TRUE) {     if (!unzip) {       cat(paste0(\"Downloaded files will not be unzipped.\\n\"))       return(NULL)     }     cat(paste0(\"Unzipping files...\\n\"))     unzip(file_name,       exdir = directory_to_unzip     )     cat(paste0(       \"Files unzipped and saved in \",       directory_to_unzip,       \".\\n\"     ))   } download_remove_zips <-   function(remove = FALSE,            download_name) {     if (remove) {       cat(paste0(\"Removing download files...\\n\"))       file.remove(download_name)       cat(paste0(\"Download files removed.\\n\"))     }   } for (f in seq_along(download_file_names)) {   download_unzip(     file_name = download_file_names[f],     directory_to_unzip = directory_to_download,     unzip = TRUE   ) } download_remove_zips(   download_name = download_file_names,   remove = FALSE ) ## Unzipping files... ## Files unzipped and saved in ./data/. ## Unzipping files... ## Files unzipped and saved in ./data/. ## Unzipping files... ## Files unzipped and saved in ./data/. ## Unzipping files... ## Files unzipped and saved in ./data/. ## Unzipping files... ## Files unzipped and saved in ./data/. ## Unzipping files... ## Files unzipped and saved in ./data/. list.files(path = directory_to_download) ##  [1] \"hms_smoke_Shapefile_20231228.zip\" \"hms_smoke_Shapefile_20231229.zip\" ##  [3] \"hms_smoke_Shapefile_20231230.zip\" \"hms_smoke_Shapefile_20231231.zip\" ##  [5] \"hms_smoke_Shapefile_20240101.zip\" \"hms_smoke_Shapefile_20240102.zip\" ##  [7] \"hms_smoke20231228.dbf\"            \"hms_smoke20231228.prj\"            ##  [9] \"hms_smoke20231228.shp\"            \"hms_smoke20231228.shx\"            ## [11] \"hms_smoke20231229.dbf\"            \"hms_smoke20231229.prj\"            ## [13] \"hms_smoke20231229.shp\"            \"hms_smoke20231229.shx\"            ## [15] \"hms_smoke20231230.dbf\"            \"hms_smoke20231230.prj\"            ## [17] \"hms_smoke20231230.shp\"            \"hms_smoke20231230.shx\"            ## [19] \"hms_smoke20231231.dbf\"            \"hms_smoke20231231.prj\"            ## [21] \"hms_smoke20231231.shp\"            \"hms_smoke20231231.shx\"            ## [23] \"hms_smoke20240101.dbf\"            \"hms_smoke20240101.prj\"            ## [25] \"hms_smoke20240101.shp\"            \"hms_smoke20240101.shx\"            ## [27] \"hms_smoke20240102.dbf\"            \"hms_smoke20240102.prj\"            ## [29] \"hms_smoke20240102.shp\"            \"hms_smoke20240102.shx\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"unit-tests","dir":"Articles","previous_headings":"","what":"Unit Tests","title":"download_data() and NASA EarthData Account","text":"previous outline successfully cleaned parameters, generated URLs, downloaded data, can sure continue work different temporal ranges data types? end, unit tests implemented ensure data download function runs properly URLs produced 2. Generate download URLs valid accessible. Like download functions, unit tests rely “helper” functions reduce repeated code across tests.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"helper-functions","dir":"Articles","previous_headings":"Unit Tests","what":"Helper functions","title":"download_data() and NASA EarthData Account","text":"read_commands() imports commands text file converts data frame vector. extract_urls() extracts download URL vector commands. position = URL within download command determined 5. Concatenate download commands. check_url_status() important download test “helper” functions. function utilizes httr::HEAD() httr::GET() check HTTP response status given URL. desired HTTP response status 200, means URL valid accessible. check_url_status() returns logical value indicate whether URL returns HTTP status 200 (TRUE) (FALSE). information HTTP status’, see HTTP response status codes. check_urls() applies check_url_status() random sample URLs extracted extract_urls(). sample size vary based dataset spatio-temporal parameters tested. function returns logical vector containing output check_url_status().","code":"read_commands <- function(     commands_path = commands_path) {   commands <- utils::read.csv(commands_path, header = FALSE)   commands <- commands[seq_len(nrow(commands)), ]   return(commands) } # function to extract URLs from vector extract_urls <- function(     commands = commands,     position = NULL) {   if (is.null(position)) {     cat(paste0(\"URL position in command is not defined.\\n\"))     return(NULL)   }   url_list <- NULL   for (c in seq_along(commands)) {     url <- stringr::str_split_i(commands[c], \" \", position)     url_list <- c(url_list, url)   }   return(url_list) } check_url_status <- function(     url,     method = \"HEAD\") {   http_status_ok <- 200   if (method == \"HEAD\") {     hd <- httr::HEAD(url)   } else if (method == \"GET\") {     hd <- httr::GET(url)   }   status <- hd$status_code   return(status == http_status_ok) } check_urls <- function(     urls = urls,     size = NULL,     method = \"HEAD\") {   if (is.null(size)) {     cat(paste0(\"URL sample size is not defined.\\n\"))     return(NULL)   }   if (length(urls) < size) {     size <- length(urls)   }   url_sample <- sample(urls, size, replace = FALSE)   url_status <- sapply(url_sample,     check_url_status,     method = method   )   return(url_status) }"},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"testthat","dir":"Articles","previous_headings":"Unit Tests","what":"testthat","title":"download_data() and NASA EarthData Account","text":"demonstrate test action, test URLs generated download_data() NOAA HMS Smoke dataset. information see testthat. Although testthat::test_that(...) chunk contains 32 lines code, unit test performed expect_true((url_status)). words, line expecting (expect_true()) (()) sampled URLs return HTTP response status 200 (url_status). Since expectation met, test passed! alternate example, can use start end date known data. URLs associated dates exist, expect function fail. test utilizes expect_error() data_download() wrapper function returns error message underlying source-specific download function returns error. test utilizes expect_error() data_download() wrapper function returns error message underlying source-specific download function returns error. directly used download_hms_data function, expect receive error. expected, test passes NOAA HMS Smoke dataset contain data January 1-2, 1800. unit tests just two many implemented download_data() accompanying source-specific download functions, demonstrate unit testing helps build stable code.","code":"library(testthat) testthat::test_that(   \"Valid dates return HTTP response status = 200.\",   {     # parameters     test_start <- \"2023-12-28\"     test_end <- \"2024-01-02\"     test_directory <- \"./data\"     # download     download_data(       dataset_name = \"noaa\",       date_start = test_start,       date_end = test_end,       data_format = \"Shapefile\",       directory_to_download = test_directory,       directory_to_save = test_directory,       acknowledgement = TRUE,       download = FALSE,       remove_command = FALSE,       unzip = FALSE,       remove_zip = FALSE     )     commands_path <- paste0(       test_directory,       \"hms_smoke_\",       gsub(\"-\", \"\", test_start),       \"_\",       gsub(\"-\", \"\", test_end),       \"_curl_commands.txt\"     )     # helpers     commands <- read_commands(commands_path = commands_path)     urls <- extract_urls(commands = commands, position = 6)     url_status <- check_urls(urls = urls, size = 6, method = \"HEAD\")     # test for true     expect_true(all(url_status))   } ) ## Skipping data download. ## Downloaded files will not be unzipped. ## Downloaded files will not be unzipped. ## Downloaded files will not be unzipped. ## Downloaded files will not be unzipped. ## Downloaded files will not be unzipped. ## Downloaded files will not be unzipped. ## Test passed 🎊 testthat::test_that(   \"Invalid dates cause function to fail.\",   {     # parameters     test_start <- \"1800-01-01\"     test_end <- \"1800-01-02\"     test_directory <- \"../inst/extdata/\"     # test for error     testthat::expect_error(       download_data(         dataset_name = \"noaa\",         date_start = test_start,         date_end = test_end,         data_format = \"Shapefile\",         directory_to_download = test_directory,         directory_to_save = test_directory,         acknowledgement = TRUE,         download = FALSE,         remove_command = FALSE,         unzip = FALSE,         remove_zip = FALSE       )     )   } ) ## <simpleError in what_to_run(directory_to_save = directory_to_save, acknowledgement = acknowledgement,     ...): Invalid date returns HTTP code 404. Check `date_start` parameter. ## > ## function (data_format = \"Shapefile\", date_start = \"2023-09-01\",  ##     date_end = \"2023-09-01\", directory_to_download = NULL, directory_to_save = NULL,  ##     acknowledgement = FALSE, download = FALSE, remove_command = FALSE,  ##     unzip = TRUE, remove_zip = FALSE)  ## NULL ## Test passed 🎉 testthat::test_that(   \"Invalid dates cause function to fail.\",   {     # parameters     test_start <- \"1800-01-01\"     test_end <- \"1800-01-02\"     test_directory <- \"../inst/extdata/\"     # test for error     testthat::expect_error(       download_hms_data(         date_start = test_start,         date_end = test_end,         data_format = \"Shapefile\",         directory_to_download = test_directory,         directory_to_save = test_directory,         acknowledgement = TRUE,         download = FALSE,         remove_command = FALSE,         unzip = FALSE,         remove_zip = FALSE       )     )   } ) ## Test passed 😸"},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"download-example","dir":"Articles","previous_headings":"","what":"Download Example","title":"download_data() and NASA EarthData Account","text":"function structure outlined unit tests place, can now perform data download. begin, check parameters required source-specific data download function. Define parameters. Download data. Checking directory shows desired data downloaded inflated, original zip files retained.","code":"names(formals(download_hms_data)) ##  [1] \"data_format\"           \"date_start\"            \"date_end\"              ##  [4] \"directory_to_download\" \"directory_to_save\"     \"acknowledgement\"       ##  [7] \"download\"              \"remove_command\"        \"unzip\"                 ## [10] \"remove_zip\" date_start <- \"2023-12-28\" date_end <- \"2024-01-02\" data_format <- \"Shapefile\" data_directory <- \"./download_example/\" acknowledgement <- TRUE download <- TRUE # run data download remove_command <- TRUE # delete \"...commands.txt\" file unzip <- TRUE # inflate (unzip) downloaded zip files remove_zip <- FALSE # retain downloaded zip files download_data(   dataset_name = \"hms\",   date_start = date_start,   date_end = date_end,   directory_to_download = data_directory,   directory_to_save = data_directory,   acknowledgement = acknowledgement,   download = download,   remove_command = remove_command,   unzip = unzip,   remove_zip = remove_zip ) ## Downloading requested files... ## Requested files have been downloaded. ## Unzipping files... ## Files unzipped and saved in ./download_example/. ## Unzipping files... ## Files unzipped and saved in ./download_example/. ## Unzipping files... ## Files unzipped and saved in ./download_example/. ## Unzipping files... ## Files unzipped and saved in ./download_example/. ## Unzipping files... ## Files unzipped and saved in ./download_example/. ## Unzipping files... ## Files unzipped and saved in ./download_example/. list.files(data_directory) ##  [1] \"hms_smoke_Shapefile_20231228.zip\" \"hms_smoke_Shapefile_20231229.zip\" ##  [3] \"hms_smoke_Shapefile_20231230.zip\" \"hms_smoke_Shapefile_20231231.zip\" ##  [5] \"hms_smoke_Shapefile_20240101.zip\" \"hms_smoke_Shapefile_20240102.zip\" ##  [7] \"hms_smoke20231228.dbf\"            \"hms_smoke20231228.prj\"            ##  [9] \"hms_smoke20231228.shp\"            \"hms_smoke20231228.shx\"            ## [11] \"hms_smoke20231229.dbf\"            \"hms_smoke20231229.prj\"            ## [13] \"hms_smoke20231229.shp\"            \"hms_smoke20231229.shx\"            ## [15] \"hms_smoke20231230.dbf\"            \"hms_smoke20231230.prj\"            ## [17] \"hms_smoke20231230.shp\"            \"hms_smoke20231230.shx\"            ## [19] \"hms_smoke20231231.dbf\"            \"hms_smoke20231231.prj\"            ## [21] \"hms_smoke20231231.shp\"            \"hms_smoke20231231.shx\"            ## [23] \"hms_smoke20240101.dbf\"            \"hms_smoke20240101.prj\"            ## [25] \"hms_smoke20240101.shp\"            \"hms_smoke20240101.shx\"            ## [27] \"hms_smoke20240102.dbf\"            \"hms_smoke20240102.prj\"            ## [29] \"hms_smoke20240102.shp\"            \"hms_smoke20240102.shx\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"nasa-earthdata-account","dir":"Articles","previous_headings":"","what":"NASA EarthData Account","title":"download_data() and NASA EarthData Account","text":"mentioned Motivation, data_download() provides access publicly available geospatial data. Although publicly available, NASA data sources require NASA EarthData Account. example, UN WPP-Adjusted population density data NASA Socioeconomic Data Applications Center (SEDAC) requires EarthData account. Without EarthData Account prerequisite files prepared, data download functions return error. downloaded file unzipped data downloaded properly.","code":"download_data(   dataset_name = \"sedac_population\",   year = \"2020\",   data_format = \"GeoTIFF\",   data_resolution = \"60 minute\",   directory_to_download = \"./sedac_population/\",   directory_to_save = \"./sedac_population\",   acknowledgement = TRUE,   download = TRUE,   unzip = TRUE,   remove_zip = FALSE,   remove_command = TRUE ) ## Downloading requested files... ## Requested files have been downloaded. ## Unzipping files... ##  ## Warning in unzip(file_name, exdir = directory_to_unzip): error 1 in extracting from zip file ##  ## Files unzipped and saved in ./sedac_population/."},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"register-or-log-in","dir":"Articles","previous_headings":"NASA EarthData Account","what":"Register or log in","title":"download_data() and NASA EarthData Account","text":"Visit https://urs.earthdata.nasa.gov/ register log NASA EarthData account. Account registration provides access NASA’s Earth Observing System Data Information System (EOSDIS) twelve Distributed Active Archive Centers (DAAC), including: Alaska Satellite Facility (ASF) DAAC Atmospheric Science Data Center (ASDC) Crustal Dynamics Data Information System (CDDIS) Global Hydrometeorology Resource Center (GHRC) Goddard Earth Sciences Data Information Services Center (GES DISC) Land Processes DAAC (LP DAAC) Level 1 Atmosphere Archive Distribution System (LAADS) DAAC National Snow Ice Data Center (NSIDC) DAAC Oak Ridge National Laboratory (ORNL) DAAC Ocean Biology DAAC (OB.DAAC) Physical Oceanography DAAC (PO.DAAC) Socioeconomic Data Applications Center (SEDAC) See https://www.earthdata.nasa.gov/eosdis/daacs information.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"approved-applications","dir":"Articles","previous_headings":"NASA EarthData Account","what":"Approved applications","title":"download_data() and NASA EarthData Account","text":"creating account, navigate “Profile”(https://urs.earthdata.nasa.gov/profile), “Applications > Authorized Apps”. “Authorized Apps” page specifies NASA EarthData applications can use login credentials. example, ensure authorization enabled “SEDAC Website”, “SEDAC Website (Alpha)”, “SEDAC Website (Beta)”.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"prerequisite-files","dir":"Articles","previous_headings":"NASA EarthData Account","what":"Prerequisite files","title":"download_data() and NASA EarthData Account","text":"NASA EarthData Account required applications authorized use credentials, time create prerequisite files. Note steps produce prerequisite files specific, much code used adopted Generate Earthdata Prerequisite Files NASA GES DISC’s “-’s” webpage (link).","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"netrc","dir":"Articles","previous_headings":"NASA EarthData Account > Prerequisite files","what":".netrc","title":"download_data() and NASA EarthData Account","text":"following commands create .netrc file, contains NASA EarthData Account credentials. First, set working directory home directory. Setting working directory differs Mac/Linux Windows machines. Create file named .netrc file.create(). Open connection .netrc sink(). Write line machine urs... replacing YOUR_USERNAME YOUR_PASSWORD NASA EarthData username password, respectively. writing line, close connection sink() . Edit settings , owner file, can read write .netrc. , check ensure file created properly.","code":"if (.Platform$OS.type == \"unix\") {   setwd(\"~/\") } else if (.Platform$OS.type == \"windows\") {   setwd(\"C:/\") } file.create(\".netrc\") sink(\".netrc\") writeLines(   \"machine urs.earthdata.nasa.gov login YOUR_USERNAME password YOUR_PASSWORD\" ) sink() system(\"chmod 0600 .netrc\") file.exists(\".netrc\") ## [1] TRUE readLines(\".netrc\") ## [1] \"machine urs.earthdata.nasa.gov login YOUR_USERNAME password YOUR_PASSWORD\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"urs_cookies","dir":"Articles","previous_headings":"NASA EarthData Account > Prerequisite files","what":".urs_cookies","title":"download_data() and NASA EarthData Account","text":"following commands create .urs_cookies file. First, set working directory home directory. Create file named .netrc file.create(). , check ensure file created properly.","code":"if (.Platform$OS.type == \"unix\") {   setwd(\"~/\") } else if (.Platform$OS.type == \"windows\") {   setwd(\"C:/\") } file.create(\".urs_cookies\") file.exists(\".urs_cookies\") ## [1] TRUE"},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"dodsrc","dir":"Articles","previous_headings":"NASA EarthData Account > Prerequisite files","what":".dodsrc","title":"download_data() and NASA EarthData Account","text":"following commands create .urs_cookies file. First, set working directory home directory. Create file named “.dodsrc” file.create() Open connection .dodsrc sink(). Write lines beginning HTTP., replacing YOUR_USERNAME YOUR_PASSWORD NASA EarthData username password, respectively. writing line, close connection sink() . , check ensure file created properly. working Windows machine, copy .dodsrc file project working directory. Replace YOUR_WORKING_DIRECTORY absolute path project working directory. important ensure commands, well username, password, home directory, typed without error, single problem files result failed download. files created correctly, UN WPP-Adjusted population density data NASA Socioeconomic Data Applications Center (SEDAC) downloaded unzipped without returning error.","code":"if (.Platform$OS.type == \"unix\") {   setwd(\"~/\") } else if (.Platform$OS.type == \"windows\") {   setwd(\"C:/\") } file.create(\".dodsrc\") sink(\".dodsrc\") writeLines(   paste0(     \"HTTP.NETRC=YOUR_HOME_DIRECTORY/.netrc\\n\",     \"HTTP.COOKIE.JAR=YOUR_HOME_DIRECTORY/.urs_cookies\"   ) ) sink() file.exists(\".dodsrc\") ## [1] TRUE readLines(\".dodsrc\") ## [1] \"HTTP.NETRC=YOUR_HOME_DIRECTORY/.netrc\"            ## [2] \"HTTP.COOKIE.JAR=YOUR_HOME_DIRECTORY/.urs_cookies\" if (.Platform$OS.type == \"windows\") {   file.copy(     \"C:/.dodsrc\",     \"YOUR_WORKING_DIRECTORY/.dodsrc\"   ) } download_data(   dataset_name = \"sedac_population\",   year = \"2020\",   data_format = \"GeoTIFF\",   data_resolution = \"60 minute\",   directory_to_download = \"./sedac_population/\",   directory_to_save = \"./sedac_population\",   acknowledgement = TRUE,   download = TRUE,   unzip = TRUE,   remove_zip = FALSE,   remove_command = TRUE ) ## Downloading requested files... ## Requested files have been downloaded. ## Unzipping files... ## Files unzipped and saved in ./sedac_population/. list.files(\"./sedac_population\") ## [1] \"gpw_v4_population_density_adjusted_to_2015_unwpp_country_totals_rev11_2020_1_deg_tif_readme.txt\" ## [2] \"gpw_v4_population_density_adjusted_to_2015_unwpp_country_totals_rev11_2020_1_deg_tif.zip\"        ## [3] \"gpw_v4_population_density_adjusted_to_2015_unwpp_country_totals_rev11_2020_1_deg.tif\""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"download_data() and NASA EarthData Account","text":"EOSDIS Distributed Active Archive Centers (DAAC). National Aeronautics Space Administration (NASA). Date accessed: January 3, 2024. https://www.earthdata.nasa.gov/eosdis/daacs. Generate Earthdata Prerequisite Files. National Aeronautics Space Administration (NASA). Date accessed: January 3, 2024. https://disc.gsfc.nasa.gov/information/howto?title=%20to%20Generate%20Earthdata%20Prerequisite%20Files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/download_functions.html","id":"code-example","dir":"Articles","previous_headings":"","what":"Code Example","title":"download_data() and NASA EarthData Account","text":"following entire R code used create download_hms_data().","code":"download_hms_data ## function (data_format = \"Shapefile\", date_start = \"2023-09-01\",  ##     date_end = \"2023-09-01\", directory_to_download = NULL, directory_to_save = NULL,  ##     acknowledgement = FALSE, download = FALSE, remove_command = FALSE,  ##     unzip = TRUE, remove_zip = FALSE)  ## { ##     download_permit(acknowledgement = acknowledgement) ##     check_for_null_parameters(mget(ls())) ##     download_setup_dir(directory_to_download) ##     download_setup_dir(directory_to_save) ##     directory_to_download <- download_sanitize_path(directory_to_download) ##     directory_to_save <- download_sanitize_path(directory_to_save) ##     if (unzip == FALSE && remove_zip == TRUE) { ##         stop(paste0(\"Arguments unzip = FALSE and remove_zip = TRUE are not \",  ##             \"acceptable together. Please change one.\\n\")) ##     } ##     date_sequence <- generate_date_sequence(date_start, date_end,  ##         sub_hyphen = TRUE) ##     base <- \"https://satepsanone.nesdis.noaa.gov/pub/FIRE/web/HMS/Smoke_Polygons/\" ##     commands_txt <- paste0(directory_to_download, \"hms_smoke_\",  ##         utils::head(date_sequence, n = 1), \"_\", utils::tail(date_sequence,  ##             n = 1), \"_curl_commands.txt\") ##     download_sink(commands_txt) ##     download_names <- NULL ##     for (f in seq_along(date_sequence)) { ##         year <- substr(date_sequence[f], 1, 4) ##         month <- substr(date_sequence[f], 5, 6) ##         if (data_format == \"Shapefile\") { ##             suffix <- \".zip\" ##             directory_to_cat <- directory_to_download ##         } ##         else if (data_format == \"KML\") { ##             suffix <- \".kml\" ##             directory_to_cat <- directory_to_save ##         } ##         url <- paste0(base, data_format, \"/\", year, \"/\", month,  ##             \"/hms_smoke\", date_sequence[f], suffix) ##         if (f == 1) { ##             if (!(check_url_status(url))) { ##                 sink() ##                 file.remove(commands_txt) ##                 stop(paste0(\"Invalid date returns HTTP code 404. \",  ##                   \"Check `date_start` parameter.\\n\")) ##             } ##         } ##         destfile <- paste0(directory_to_cat, \"hms_smoke_\", data_format,  ##             \"_\", date_sequence[f], suffix) ##         download_names <- c(download_names, destfile) ##         command <- paste0(\"curl -s -o \", destfile, \" --url \",  ##             url, \"\\n\") ##         cat(command) ##     } ##     sink() ##     system_command <- paste0(\". \", commands_txt, \"\\n\") ##     download_run(download = download, system_command = system_command) ##     download_remove_command(remove = remove_command, commands_txt = commands_txt) ##     if (data_format == \"KML\") { ##         return(cat(paste0(\"KML files cannot be unzipped.\\n\"))) ##     } ##     for (d in seq_along(download_names)) { ##         download_unzip(file_name = download_names[d], directory_to_unzip = directory_to_save,  ##             unzip = unzip) ##     } ##     download_remove_zips(remove = remove_zip, download_name = download_names) ## } ## <bytecode: 0x5601ec74dff0>"},{"path":"https://kyle-messier.github.io/amadeus/articles/epa_download.html","id":"downloading-and-pre-processing-pre-generated-epa-aqs-data-from-their-website","dir":"Articles","previous_headings":"","what":"Downloading and pre-processing pre-generated EPA AQS data from their website","title":"Downloading EPA Daily Data","text":"script downloads pre-processed data EPA’s AQS data desired variable, year(s), temporal resolution. script also joins multiple years’ data single data frame, downloads file metadata monitors included dataset. first version script (August 2023) written download daily PM2.5 data period 2018-2022. Available datasets can found website https://aqs.epa.gov/aqsweb/airdata/download_files.html.","code":""},{"path":"https://kyle-messier.github.io/amadeus/articles/epa_download.html","id":"setting-up-for-data-download","dir":"Articles","previous_headings":"Downloading and pre-processing pre-generated EPA AQS data from their website","what":"1. Setting up for data download","title":"Downloading EPA Daily Data","text":"Specifying temporal resolution, parameter interest, year Create list file URLs Specify download folder desired name downloaded zip files","code":"resolution <- \"daily\" parameter_code <- 88101 # Parameter Code for PM2.5 local conditions startyear <- 2018 endyear <- 2022 file_urls <- sprintf(   paste(\"https://aqs.epa.gov/aqsweb/airdata/\", resolution,     \"_\", parameter_code, \"_%.0f.zip\",     sep = \"\"   ),   startyear:endyear ) file_urls ## [1] \"https://aqs.epa.gov/aqsweb/airdata/daily_88101_2018.zip\" ## [2] \"https://aqs.epa.gov/aqsweb/airdata/daily_88101_2019.zip\" ## [3] \"https://aqs.epa.gov/aqsweb/airdata/daily_88101_2020.zip\" ## [4] \"https://aqs.epa.gov/aqsweb/airdata/daily_88101_2021.zip\" ## [5] \"https://aqs.epa.gov/aqsweb/airdata/daily_88101_2022.zip\" download_dir <- \"../input/aqs/\" download_names <- sprintf(   paste(download_dir,     \"download_output_%.0f.zip\",     sep = \"\"   ),   startyear:endyear ) download_names ## [1] \"../input/aqs/download_output_2018.zip\" ## [2] \"../input/aqs/download_output_2019.zip\" ## [3] \"../input/aqs/download_output_2020.zip\" ## [4] \"../input/aqs/download_output_2021.zip\" ## [5] \"../input/aqs/download_output_2022.zip\""},{"path":"https://kyle-messier.github.io/amadeus/articles/epa_download.html","id":"downloading-data","dir":"Articles","previous_headings":"Downloading and pre-processing pre-generated EPA AQS data from their website","what":"2. Downloading data","title":"Downloading EPA Daily Data","text":"Download zip files website Construct string unzipped file names","code":"download.file(file_urls, download_names, method = \"libcurl\") csv_names <- sprintf(   paste(download_dir, resolution, \"_\",     parameter_code, \"_%.0f.csv\",     sep = \"\"   ),   startyear:endyear )"},{"path":"https://kyle-messier.github.io/amadeus/articles/epa_download.html","id":"processing-data","dir":"Articles","previous_headings":"Downloading and pre-processing pre-generated EPA AQS data from their website","what":"3. Processing data","title":"Downloading EPA Daily Data","text":"Unzip read .csv files, process join one dataframe. unique site identifier “ID.Code” string structure State-County-Site-Parameter-POC","code":"for (n in seq_along(file_urls)) {   # Unzips file to same folder it was downloaded to   unzip(download_names[n], exdir = download_dir)    # Read in dataframe   print(paste(\"reading and processing file:\", csv_names[n], \"...\"))   data <- read.csv(csv_names[n], stringsAsFactors = FALSE)    # Make unique site identifier: State-County-Site-Parameter-POC   data$ID.Code <- paste(data$State.Code, data$County.Code,     data$Site.Num, data$Parameter.Code,     data$POC,     sep = \"-\"   )    # Concatenate with other years   if (n == 1) {     data_all <- data   } else {     data_all <- rbind(data_all, data)   } } ## [1] \"reading and processing file:../input/aqs/daily_88101_2018.csv...\" ## [1] \"reading and processing file:../input/aqs/daily_88101_2019.csv...\" ## [1] \"reading and processing file:../input/aqs/daily_88101_2020.csv...\" ## [1] \"reading and processing file:../input/aqs/daily_88101_2021.csv...\" ## [1] \"reading and processing file:../input/aqs/daily_88101_2022.csv...\""},{"path":"https://kyle-messier.github.io/amadeus/articles/epa_download.html","id":"downloading-monitor-metadata-file-and-filter-for-relevant-sites","dir":"Articles","previous_headings":"Downloading and pre-processing pre-generated EPA AQS data from their website","what":"4. Downloading monitor metadata file and filter for relevant sites","title":"Downloading EPA Daily Data","text":"Download monitors file Unzip read Create site identifier Filter monitors file include monitors csv","code":"destfile <- paste(download_dir, \"aqs_monitors.zip\", sep = \"\") download.file(\"https://aqs.epa.gov/aqsweb/airdata/aqs_monitors.zip\", destfile) unzip(destfile, exdir = download_dir) monitors <- read.csv(\"../input/aqs/aqs_monitors.csv\", stringsAsFactors = FALSE) # Convert from string to numeric to get rid of leading zeros, # the NAs introduced are from monitors in Canada with site number=\"CC\" monitors$State.Code <- as.numeric(monitors$State.Code) monitors$ID.Code <- paste(monitors$State.Code, monitors$County.Code,   monitors$Site.Num, monitors$Parameter.Code,   monitors$POC,   sep = \"-\" ) monitors <- read.csv(\"../input/aqs/aqs_monitors.csv\",   stringsAsFactors = FALSE ) monitors_filter <- monitors[which(monitors$ID.Code %in% data_all$ID.Code), ]"},{"path":"https://kyle-messier.github.io/amadeus/articles/epa_download.html","id":"uploading-data-to-desired-folder","dir":"Articles","previous_headings":"Downloading and pre-processing pre-generated EPA AQS data from their website","what":"5. Uploading data to desired folder","title":"Downloading EPA Daily Data","text":"","code":"savepath <- \"../input/aqs/\"  write.csv(data_all, paste(savepath, resolution, \"_\", parameter_code, \"_\",   startyear, \"-\", endyear, \".csv\",   sep = \"\" )) write.csv(monitors_filter, paste(savepath, \"monitors_\", parameter_code, \"_\",   startyear, \"-\", endyear, \".csv\",   sep = \"\" ))"},{"path":"https://kyle-messier.github.io/amadeus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kyle Messier. Author, maintainer. Mitchell Manware. Author, contributor. Insang Song. Author, contributor. Eva Marques. Author, contributor. Mariana Alifa Kassien. Author, contributor. Ranadeep Daw. Author, contributor. Daniel Zilber. Author, contributor.","code":""},{"path":"https://kyle-messier.github.io/amadeus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Messier K, Manware M, Song , Marques E, Alifa Kassien M, Daw R, Zilber D (2024). amadeus: AMADEUS: Mechanism/Machine Data, Environments, User Setup. R package version 0.1.5, , https://github.com/kyle-messier/amadeus.","code":"@Manual{,   title = {amadeus: AMADEUS: A Mechanism/Machine for Data, Environments, and User Setup},   author = {Kyle Messier and Mitchell Manware and Insang Song and Eva Marques and Mariana {Alifa Kassien} and Ranadeep Daw and Daniel Zilber},   year = {2024},   note = {R package version 0.1.5, },   url = {https://github.com/kyle-messier/amadeus}, }"},{"path":"https://kyle-messier.github.io/amadeus/index.html","id":"amadeus","dir":"","previous_headings":"","what":"AMADEUS: A Mechanism/Machine for Data, Environments, and User Setup","title":"AMADEUS: A Mechanism/Machine for Data, Environments, and User Setup","text":"Mechanism/Machine Data, Environments, User Setup amadeus R package devloped improve expideite users’ access large, publicly available geospatial datasets. functions amadeus allow users download import cleaned geospatial data directly R, useful automated run scripts, analysis pipelines, reproducible science general.","code":""},{"path":"https://kyle-messier.github.io/amadeus/index.html","id":"download","dir":"","previous_headings":"","what":"Download","title":"AMADEUS: A Mechanism/Machine for Data, Environments, and User Setup","text":"download_data() accesses downloads raw geospatial data variety open source data repositories. function wrapper calls source-specific download functions, account source’s unique combination URL, file naming conventions, data types. Download functions cover following sources: See download_functions vignette detailed description source-specific download functions. Example use download_data() using NOAA NCEP North American Regional Reanalysis’s (NARR) “weasd” (Daily Accumulated Snow Surface) variable.","code":"> download_data( +   dataset_name = \"narr_monolevel\", +   year_start = 2022, +   year_end = 2022, +   variable = \"weasd\", +   directory_to_save = directory_to_save, +   data_download_acknowledgement = TRUE, +   download = TRUE + ) Downloading requested files... Requested files have been downloaded. > list.files(paste0(directory_to_save, \"weasd/\")) [1] \"weasd.2022.nc\""},{"path":"https://kyle-messier.github.io/amadeus/index.html","id":"process","dir":"","previous_headings":"","what":"Process","title":"AMADEUS: A Mechanism/Machine for Data, Environments, and User Setup","text":"process_covariates() imports cleans raw geospatial data (downloaded download_data()), returns single SpatRaster SpatVector user’s R environment. process_covariates() “cleans” data defining interpretable layer names, ensuring coordinate reference system present, managing time data (applicable). avoid errors using process_covariates(), edit raw downloaded data files. Passing user-generated edited data process_covariates() may result errors underlying functions adapted sources’ raw data file type. Example use process_covariates() using downloaded “weasd” data.","code":"> weasd <- process_covariates( +   covariate = \"narr\", +   date = c(\"2022-01-01\", \"2022-01-05\"), +   variable = \"weasd\", +   path = path + ) Cleaning weasd data for year 2022... Returning daily weasd data from 2022-01-01 to 2022-01-05. > weasd class       : SpatRaster  dimensions  : 277, 349, 5  (nrow, ncol, nlyr) resolution  : 32462.99, 32463  (x, y) extent      : -16231.49, 11313351, -16231.5, 8976020  (xmin, xmax, ymin, ymax) coord. ref. : +proj=lcc +lat_0=50 +lon_0=-107 +lat_1=50 +lat_2=50 +x_0=5632642.22547 +y_0=4612545.65137 +datum=WGS84 +units=m +no_defs  source      : weasd.2022.nc:weasd  varname     : weasd (Daily Accumulated Snow at Surface)  names       : weasd_20220101, weasd_20220102, weasd_20220103, weasd_20220104, weasd_20220105  unit        :         kg/m^2,         kg/m^2,         kg/m^2,         kg/m^2,         kg/m^2  time        : 2022-01-01 to 2022-01-05 UTC"},{"path":"https://kyle-messier.github.io/amadeus/index.html","id":"calculate-covariates","dir":"","previous_headings":"","what":"Calculate Covariates","title":"AMADEUS: A Mechanism/Machine for Data, Environments, and User Setup","text":"calc_covariates() stems beethoven package, air pollution model’s (citation) need various types data extracted precise locations. calc_covariates(), therefore, extracts data “cleaned” SpatRaster SpatVector object user defined locations. Users can choose buffer locations. function returns data.frame data extracted locations layer row SpatRaster SpatVector object, respectively. Example calc_covariates() using processed “weasd” data.","code":"> weasd_covar <- calc_covariates( +   covariate = \"narr\", +   from = weasd, +   locs = locs, +   locs_id = \"site_id\", +   radius = 0 + ) Converting data.table to data.frame... Projecting data to desired coordinate reference system... Utilizing 0 meter buffer for covariate calculations. Calculating daily weasd covariates at monolevel for date 2022-01-01... Calculating daily weasd covariates at monolevel for date 2022-01-02... Calculating daily weasd covariates at monolevel for date 2022-01-03... Calculating daily weasd covariates at monolevel for date 2022-01-04... Calculating daily weasd covariates at monolevel for date 2022-01-05... Returning weasd covariates. > weasd_covar           site_id       date     level     weasd_0 1  37183001488101 2022-01-01 monolevel 0.000000000 2  37183002188101 2022-01-01 monolevel 0.000000000 3  37063001588101 2022-01-01 monolevel 0.000000000 4  37183001488101 2022-01-02 monolevel 0.000000000 5  37183002188101 2022-01-02 monolevel 0.000000000 6  37063001588101 2022-01-02 monolevel 0.000000000 7  37183001488101 2022-01-03 monolevel 0.000000000 8  37183002188101 2022-01-03 monolevel 0.000000000 9  37063001588101 2022-01-03 monolevel 0.000000000 10 37183001488101 2022-01-04 monolevel 0.000000000 11 37183002188101 2022-01-04 monolevel 0.000000000 12 37063001588101 2022-01-04 monolevel 0.000000000 13 37183001488101 2022-01-05 monolevel 0.003906250 14 37183002188101 2022-01-05 monolevel 0.001953125 15 37063001588101 2022-01-05 monolevel 0.001953125"},{"path":"https://kyle-messier.github.io/amadeus/index.html","id":"other-sources","dir":"","previous_headings":"","what":"Other sources","title":"AMADEUS: A Mechanism/Machine for Data, Environments, and User Setup","text":"list data sources can accessed via R packages climate weather datasets. * Updated longer two years . ** Archived; longer maintained.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/as_mysftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an sftime object — as_mysftime","title":"Create an sftime object — as_mysftime","text":"Create sftime object one data.frame, data.table, sf, sftime, SpatRaster, SpatRasterDataset, SpatVector","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/as_mysftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an sftime object — as_mysftime","text":"","code":"as_mysftime(x, ...)"},{"path":"https://kyle-messier.github.io/amadeus/reference/as_mysftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an sftime object — as_mysftime","text":"x object class data.frame, data.table, sf, sftime, SpatRaster, SpatRasterDataset SpatVector ... x data.frame data.table: lonname, latname, timename crs arguments required. x sf sftime, timename argument required. x terra::SpatRaster, varname argument required.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/as_mysftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an sftime object — as_mysftime","text":"sftime object constrained time column name","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/as_mysftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an sftime object — as_mysftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate covariates wrapper function — calc_covariates","title":"Calculate covariates wrapper function — calc_covariates","text":"calculate_covariates() function extracts values point locations SpatRaster SpatVector object returned process_covariates(). calculate_covariates() underlying source-specific covariate functions designed operate processed objects. avoid errors, edit processed SpatRaster SpatVector objects passing calculate_covariates().","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate covariates wrapper function — calc_covariates","text":"","code":"calc_covariates(   covariate = c(\"modis\", \"koppen-geiger\", \"koeppen-geiger\", \"koppen\", \"koeppen\", \"geos\",     \"dummies\", \"gmted\", \"roads\", \"ecoregions\", \"ecoregion\", \"hms\", \"noaa\", \"smoke\",     \"gmted\", \"narr\", \"narr_monolevel\", \"narr_p_levels\", \"plevels\", \"monolevel\",     \"p_levels\", \"geos\", \"sedac_population\", \"population\", \"nlcd\", \"merra\", \"MERRA\",     \"merra2\", \"MERRA2\"),   from,   locs,   locs_id = \"site_id\",   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate covariates wrapper function — calc_covariates","text":"covariate character(1). Covariate type. character. Single multiple strings. locs sf/SpatVector. Unique locations. include unique identifier field named locs_id locs_id character(1). Name unique identifier. Default \"site_id\". ... Arguments passed covariate calculation function.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate covariates wrapper function — calc_covariates","text":"Calculated covariates. Mainly data.frame object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_covariates.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate covariates wrapper function — calc_covariates","text":"covariate argument value converted lowercase.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_covariates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate covariates wrapper function — calc_covariates","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_ecoregion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ecoregions covariates — calc_ecoregion","title":"Calculate ecoregions covariates — calc_ecoregion","text":"Extract ecoregions covariates (U.S. EPA Ecoregions Level 2/3) point locations. Returns data.frame object containing locs_id binary (0 = point ecoregion; 1 = point ecoregion) variables ecoregion.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_ecoregion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ecoregions covariates — calc_ecoregion","text":"","code":"calc_ecoregion(from = NULL, locs, locs_id = \"site_id\", ...)"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_ecoregion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ecoregions covariates — calc_ecoregion","text":"SpatVector(1). Output process_ecoregion. locs sf/SpatVector. Unique locs. include unique identifier field named locs_id locs_id character(1). Name unique identifier. ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_ecoregion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ecoregions covariates — calc_ecoregion","text":"data.frame object dummy variables attributes : attr(., \"ecoregion2_code\"): Ecoregion lv.2 code key attr(., \"ecoregion3_code\"): Ecoregion lv.3 code key","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_ecoregion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate ecoregions covariates — calc_ecoregion","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_geos.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate atmospheric composition covariates — calc_geos","title":"Calculate atmospheric composition covariates — calc_geos","text":"Extract atmospheric composition values point locations. Returns data.frame object containing locs_id, date hour, vertical pressure level, atmospheric composition variable. Atmospheric composition variable column name reflects variable circular buffer radius.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_geos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate atmospheric composition covariates — calc_geos","text":"","code":"calc_geos(from, locs, locs_id = NULL, radius = 0, fun = \"mean\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_geos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate atmospheric composition covariates — calc_geos","text":"SpatRaster(1). Output process_geos(). locs data.frame, characater file path, SpatVector, sf object. locs_id character(1). Column within locations CSV file containing identifier unique coordinate location. radius integer(1). Circular buffer distance around site locations. (Default = 0). fun character(1). Function used summarize multiple raster cells within sites location buffer (Default = mean).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_geos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate atmospheric composition covariates — calc_geos","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_geos.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate atmospheric composition covariates — calc_geos","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_gmted.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate elevation covariates — calc_gmted","title":"Calculate elevation covariates — calc_gmted","text":"Extract elevation values point locations. Returns data.frame object containing locs_id elevation variable. Elevation variable column name reflects elevation statistic, spatial resolution , circular buffer radius.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_gmted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate elevation covariates — calc_gmted","text":"","code":"calc_gmted(from, locs, locs_id = NULL, radius = 0, fun = \"mean\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_gmted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate elevation covariates — calc_gmted","text":"SpatRaster(1). Output process_gmted(). locs data.frame. character file path, SpatVector, sf object. locs_id character(1). Column within locations CSV file containing identifier unique coordinate location. radius integer(1). Circular buffer distance around site locations. (Default = 0). fun character(1). Function used summarize multiple raster cells within sites location buffer (Default = mean).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_gmted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate elevation covariates — calc_gmted","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_gmted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate elevation covariates — calc_gmted","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_hms.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate wildfire smoke covariates — calc_hms","title":"Calculate wildfire smoke covariates — calc_hms","text":"Extract wildfire smoke plume values point locations. Returns data.frame object containing locs_id, date, binary variable wildfire smoke plume density inherited (0 = point covered wildfire smoke plume; 1 = point covered wildfire smoke plume).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_hms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate wildfire smoke covariates — calc_hms","text":"","code":"calc_hms(from, locs, locs_id = NULL, radius = 0)"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_hms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate wildfire smoke covariates — calc_hms","text":"SpatVector(1). Output process_hms(). locs data.frame, characater file path, SpatVector, sf object. locs_id character(1). Column within locations CSV file containing identifier unique coordinate location. radius integer(1). Circular buffer distance around site locations. (Default = 0).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_hms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate wildfire smoke covariates — calc_hms","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_hms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate wildfire smoke covariates — calc_hms","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_koppen_geiger.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate climate classification covariates — calc_koppen_geiger","title":"Calculate climate classification covariates — calc_koppen_geiger","text":"Extract climate classification values point locations. Returns data.frame object containing locs_id binary (0 = point climate region; 1 = point climate region) variables climate classification region.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_koppen_geiger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate climate classification covariates — calc_koppen_geiger","text":"","code":"calc_koppen_geiger(from = NULL, locs = NULL, locs_id = \"site_id\", ...)"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_koppen_geiger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate climate classification covariates — calc_koppen_geiger","text":"SpatVector(1). Output process_koppen_geiger(). locs sf/SpatVector. Unique locs. include unique identifier field named locs_id locs_id character(1). Name unique identifier. ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_koppen_geiger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate climate classification covariates — calc_koppen_geiger","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_koppen_geiger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate climate classification covariates — calc_koppen_geiger","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_merra2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate meteorological and atmospheric covariates — calc_merra2","title":"Calculate meteorological and atmospheric covariates — calc_merra2","text":"Extract meteorological atmospheric values point locations. Returns data.frame object containing locs_id, date hour, vertical pressure level, meteorological atmospheric variable. Variable column name reflects variable circular buffer radius.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_merra2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate meteorological and atmospheric covariates — calc_merra2","text":"","code":"calc_merra2(from, locs, locs_id = NULL, radius = 0, fun = \"mean\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_merra2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate meteorological and atmospheric covariates — calc_merra2","text":"SpatRaster(1). Output process_merra2(). locs data.frame, characater file path, SpatVector, sf object. locs_id character(1). Column within locations CSV file containing identifier unique coordinate location. radius integer(1). Circular buffer distance around site locations. (Default = 0). fun character(1). Function used summarize multiple raster cells within sites location buffer (Default = mean).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_merra2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate meteorological and atmospheric covariates — calc_merra2","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_merra2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate meteorological and atmospheric covariates — calc_merra2","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_daily.html","id":null,"dir":"Reference","previous_headings":"","what":"A single-date MODIS worker for parallelization — calc_modis_daily","title":"A single-date MODIS worker for parallelization — calc_modis_daily","text":"function operates MODIS/VIIRS products daily basis. Given raw hdf files downloaded NASA, standard file names include data retrieval date flag starting letter \"\". Leveraging piece information, function select files scope date interest. Please note function provide function filter swaths tiles, strongly recommended check pre-filter file names users' discretion.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single-date MODIS worker for parallelization — calc_modis_daily","text":"","code":"calc_modis_daily(   from = NULL,   locs = NULL,   locs_id = \"site_id\",   radius = 0L,   date = NULL,   name_extracted = NULL,   fun_summary = \"mean\",   max_cells = 1e+08,   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A single-date MODIS worker for parallelization — calc_modis_daily","text":"SpatRaster. Preprocessed objects. locs SpatVector/sf/sftime object. Locations MODIS values summarized. locs_id character(1). Field name unique site identifiers stored. Default \"site_id\" radius numeric. Radius generate circular buffers. date Date(1). date query. name_extracted character. Names calculated covariates. fun_summary function. Summary function multilayer rasters. Passed foo. See exactextractr::exact_extract details. max_cells integer(1). Maximum number cells read . Higher values expedite processing, increase memory usage. Maximum possible value 2^31 - 1. See exactextractr::exact_extract details. ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_daily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A single-date MODIS worker for parallelization — calc_modis_daily","text":"data.frame object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_daily.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A single-date MODIS worker for parallelization — calc_modis_daily","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MODIS product covariates in multiple CPU threads — calc_modis_par","title":"Calculate MODIS product covariates in multiple CPU threads — calc_modis_par","text":"calc_modis_par essentially runs calc_modis_daily function thread (subprocess). Based daily resolution, day's workload distributed thread. product argument, files processed customized function unique structure /characteristics products considered. nthreads argument carefully selected consideration machine's CPU memory capacities products memory pressure. locs sf object exportable parallel workers.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MODIS product covariates in multiple CPU threads — calc_modis_par","text":"","code":"calc_modis_par(   from = NULL,   locs = NULL,   locs_id = \"site_id\",   radius = c(0L, 1000L, 10000L, 50000L),   preprocess = process_modis_merge,   name_covariates = NULL,   subdataset = NULL,   fun_summary = \"mean\",   nthreads = floor(length(parallelly::availableWorkers())/2),   package_list_add = NULL,   export_list_add = NULL,   max_cells = 1e+08,   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MODIS product covariates in multiple CPU threads — calc_modis_par","text":"character. List paths MODIS/VIIRS files. locs sf/SpatVector object. Unique locs covariates calculated. locs_id character(1). Site identifier. Default \"site_id\" radius numeric. Radii calculate covariates. Default c(0, 1000, 10000, 50000). preprocess function. Function handle HDF files. name_covariates character. Name header covariates. e.g., \"MOD_NDVIF_0_\". calculated covariate names form 'name_covariateszero-padded buffer radius meters', e.g., 'MOD_NDVIF_0_50000' 50 km radius circular buffer used calculate mean NDVI value. subdataset Index search pattern subdataset. fun_summary character function. Function summarize extracted raster values. nthreads integer(1). Number threads used calculate covariates. package_list_add character. vector package names load thread. Note sf, terra, exactextractr, doParallel, parallelly dplyr default packages loaded. export_list_add character. vector object names export thread. minimized spare memory. max_cells integer(1). Maximum number cells read . Higher values expedite processing, increase memory usage. Maximum possible value 2^31 - 1. See exactextractr::exact_extract details. ... Arguments passed preprocess.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_modis_par.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate MODIS product covariates in multiple CPU threads — calc_modis_par","text":"Overall, function dependent routines assume file system can handle concurrent access (network) disk multiple processes. File system characteristics, package versions, hardware settings specification can affect processing efficiency. locs expected convertible sf object. sf, SpatVector, class objects converted sf can used. Common arguments preprocess functions date path automatically detected passed function. Please note locs path preprocess functions assumed standard naming convention raw files NASA.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_narr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate meteorological covariates — calc_narr","title":"Calculate meteorological covariates — calc_narr","text":"Extract meteorological values point locations. Returns data.frame object containing locs_id, date, vertical pressure level, meteorological variable. Meteorological variable column name reflects variable circular buffer radius.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_narr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate meteorological covariates — calc_narr","text":"","code":"calc_narr(from, locs, locs_id = NULL, radius = 0, fun = \"mean\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_narr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate meteorological covariates — calc_narr","text":"SpatRaster(1). Output process_narr(). locs data.frame, characater file path, SpatVector, sf object. locs_id character(1). Column within locations CSV file containing identifier unique coordinate location. radius integer(1). Circular buffer distance around site locations. (Default = 0). fun character(1). Function used summarize multiple raster cells within sites location buffer (Default = mean).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_narr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate meteorological covariates — calc_narr","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_narr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate meteorological covariates — calc_narr","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nei.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate road emissions covariates — calc_nei","title":"Calculate road emissions covariates — calc_nei","text":"Calculate road emissions covariates","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate road emissions covariates — calc_nei","text":"","code":"calc_nei(from = NULL, locs = NULL, locs_id = \"site_id\", ...)"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate road emissions covariates — calc_nei","text":"SpatVector(1). Output process_nei(). locs sf/SpatVector. Locations NEI values joined. locs_id character(1). Unique site identifier column name. Unused kept compatibility. ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nei.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate road emissions covariates — calc_nei","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nei.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate road emissions covariates — calc_nei","text":"Insang Song, Ranadeep Daw","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nlcd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate land cover covariates — calc_nlcd","title":"Calculate land cover covariates — calc_nlcd","text":"Compute ratio land cover class circle buffers around points. Returns data.frame object containing locs_id, longitude, latitude, time (year), computed ratio land cover class.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nlcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate land cover covariates — calc_nlcd","text":"","code":"calc_nlcd(   from,   locs,   locs_id = \"site_id\",   radius = 1000,   max_cells = 1e+08,   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nlcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate land cover covariates — calc_nlcd","text":"SpatRaster(1). Output process_nlcd(). locs terra::SpatVector points geometry locs_id character(1). Unique identifier locations radius numeric (non-negative) giving radius buffer around points max_cells integer(1). Maximum number cells read . Higher values expedite processing, increase memory usage. Maximum possible value 2^31 - 1. See exactextractr::exact_extract details. ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_nlcd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate land cover covariates — calc_nlcd","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_groads.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate roads covariates — calc_sedac_groads","title":"Calculate roads covariates — calc_sedac_groads","text":"Prepared groads data clipped buffer polygons radius. total length roads calculated. density roads calculated dividing total length area buffer. terra::linearUnits() used convert unit length meters.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_groads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate roads covariates — calc_sedac_groads","text":"","code":"calc_sedac_groads(   from = NULL,   locs = NULL,   locs_id = NULL,   radius = 1000,   fun = sum )"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_groads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate roads covariates — calc_sedac_groads","text":"SpatVector(1). Output process_sedac_groads. locs data.frame, characater file path, SpatVector, sf object. locs_id character(1). Column within locations CSV file containing identifier unique coordinate location. radius integer(1). Circular buffer distance around site locations. (Default = 1000). fun function(1). Function used summarize length roads within sites location buffer (Default sum).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_groads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate roads covariates — calc_sedac_groads","text":"data.frame object three columns.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_groads.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate roads covariates — calc_sedac_groads","text":"Unit km / sq km.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_groads.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate roads covariates — calc_sedac_groads","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate population density covariates — calc_sedac_population","title":"Calculate population density covariates — calc_sedac_population","text":"Extract population density values point locations. Returns data.frame object containing locs_id, year, population density variable. Population density variable column name reflects spatial resolution circular buffer radius.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate population density covariates — calc_sedac_population","text":"","code":"calc_sedac_population(from, locs, locs_id = NULL, radius = 0, fun = \"mean\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate population density covariates — calc_sedac_population","text":"SpatRaster(1). Output process_sedac_population(). locs data.frame, characater file path, SpatVector, sf object. locs_id character(1). Column within locations CSV file containing identifier unique coordinate location. radius integer(1). Circular buffer distance around site locations. (Default = 0). fun character(1). Function used summarize multiple raster cells within sites location buffer (Default = mean).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate population density covariates — calc_sedac_population","text":"data.frame object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedac_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate population density covariates — calc_sedac_population","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"Calculate Sum Exponentially Decaying Contributions (SEDC) covariates","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"","code":"calc_sedc(   from = NULL,   locs = NULL,   locs_id = NULL,   sedc_bandwidth = NULL,   target_fields = NULL )"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"SpatVector object. Locations SEDC calculated. locs SpatVector object. Locations sum SEDCs calculated. locs_id character(1). Name unique id field point_to. sedc_bandwidth numeric(1). Distance source concentration reduced exp(-3) (approximately -95 %) target_fields character(varying). Field names characters.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"data.frame (tibble) object input field names suffix \"_sedc\" sums EDC stored. Additional attributes attached EDC information. `attr(result, \"sedc_bandwidth\")``: bandwidth concentration reduces approximately five percent `attr(result, \"sedc_threshold\")``: threshold distance emission source points excluded beyond ","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"function originally chopin Distance calculation done terra functions internally. Thus, function internally converts sf objects point_* arguments terra. threshold carefully chosen users.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"Messier KP, Akita Y, & Serre ML. (2012). Integrating Address Geocoding, Land Use Regression, Spatiotemporal Geostatistical Estimation Groundwater Tetrachloroethylene. Environmental Science & Technology 46(5), 2772-2780. Wiesner C. (n.d.). Euclidean Sum Exponentially Decaying Contributions Tutorial","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_sedc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Sum of Exponentially Decaying Contributions (SEDC) covariates — calc_sedc","text":"","code":"library(terra) #> terra 1.7.71 library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE set.seed(101) ncpath <- system.file(\"gpkg/nc.gpkg\", package = \"sf\") nc <- terra::vect(ncpath) nc <- terra::project(nc, \"EPSG:5070\") pnt_locs <- terra::centroids(nc, inside = TRUE) pnt_locs <- pnt_locs[, \"NAME\"] pnt_from <- terra::spatSample(nc, 100L) pnt_from$pid <- seq(1, 100) pnt_from <- pnt_from[, \"pid\"] pnt_from$val1 <- rgamma(100L, 1, 0.05) pnt_from$val2 <- rgamma(100L, 2, 1)  vals <- c(\"val1\", \"val2\") calc_sedc(pnt_locs, pnt_from, \"NAME\", 1e5, vals) #> Joining with `by = join_by(from_id)` #> Joining with `by = join_by(to_id)` #> Joining with `by = join_by(from_id, to_id)` #> # A tibble: 100 × 3 #>    NAME       val1  val2 #>    <chr>     <dbl> <dbl> #>  1 Alamance   66.3  6.71 #>  2 Alexander  98.0 11.7  #>  3 Alleghany 135.   8.57 #>  4 Anson      50.0  5.23 #>  5 Ashe      143.   8.42 #>  6 Avery      76.1  8.76 #>  7 Beaufort   58.8  6.29 #>  8 Bertie     70.1  7.85 #>  9 Bladen     79.5  6.82 #> 10 Brunswick  54.3  5.34 #> # ℹ 90 more rows"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_temporal_dummies.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate temporal dummy covariates — calc_temporal_dummies","title":"Calculate temporal dummy covariates — calc_temporal_dummies","text":"Calculate temporal dummy covariates point locations. Returns data.frame object locs_id, year binary variable value year, month day week binary variables.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_temporal_dummies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate temporal dummy covariates — calc_temporal_dummies","text":"","code":"calc_temporal_dummies(locs, locs_id = \"site_id\", year = seq(2018L, 2022L), ...)"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_temporal_dummies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate temporal dummy covariates — calc_temporal_dummies","text":"locs data.frame temporal field named \"time\" locs_id character(1). Unique site identifier column name. Default \"site_id\". year integer. Year domain dummify. Default seq(2018L, 2022L) ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_temporal_dummies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate temporal dummy covariates — calc_temporal_dummies","text":"data.frame object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_temporal_dummies.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate temporal dummy covariates — calc_temporal_dummies","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_tri.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate toxic release covariates — calc_tri","title":"Calculate toxic release covariates — calc_tri","text":"Extract toxic release values point locations. Returns data.frame object containing locs_id variables chemical .","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_tri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate toxic release covariates — calc_tri","text":"","code":"calc_tri(   from = NULL,   locs,   locs_id = \"site_id\",   radius = c(1000L, 10000L, 50000L),   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_tri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate toxic release covariates — calc_tri","text":"SpatVector(1). Output process_tri(). locs sf/SpatVector. Locations TRI variables calculated. locs_id character(1). Unique site identifier column name. Default \"site_id\". radius Circular buffer radius. Default c(1000, 10000, 50000) (meters) ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_tri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate toxic release covariates — calc_tri","text":"data.frame object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_tri.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate toxic release covariates — calc_tri","text":"U.S. context.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/calc_tri.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate toxic release covariates — calc_tri","text":"Insang Song, Mariana Kassien","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_for_null_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Check parameters — check_for_null_parameters","title":"Check parameters — check_for_null_parameters","text":"Check parameters assigned value.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_for_null_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check parameters — check_for_null_parameters","text":"","code":"check_for_null_parameters(parameters)"},{"path":"https://kyle-messier.github.io/amadeus/reference/check_for_null_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check parameters — check_for_null_parameters","text":"parameters parameters passed function (called mget(ls()).)","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysf.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sf object — check_mysf","title":"Check sf object — check_mysf","text":"Check sf object class, $geometry column, geometry class.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sf object — check_mysf","text":"","code":"check_mysf(x)"},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sf object — check_mysf","text":"x sf object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check sf object — check_mysf","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sftime object — check_mysftime","title":"Check sftime object — check_mysftime","text":"Check sftime object class, $time column, $geometry column, geometry class.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sftime object — check_mysftime","text":"","code":"check_mysftime(x)"},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sftime object — check_mysftime","text":"x sftime object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_mysftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check sftime object — check_mysftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_url_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Check HTTP status — check_url_status","title":"Check HTTP status — check_url_status","text":"Check provided URL returns HTTP status 200.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_url_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check HTTP status — check_url_status","text":"","code":"check_url_status(url, method = c(\"HEAD\", \"GET\"))"},{"path":"https://kyle-messier.github.io/amadeus/reference/check_url_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check HTTP status — check_url_status","text":"url Download URL checked. method httr method obtain URL (\"HEAD\" \"GET\")","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_url_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check HTTP status — check_url_status","text":"logical object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_url_status.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check HTTP status — check_url_status","text":"Insang Song; Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement check_url_status — check_urls","title":"Implement check_url_status — check_urls","text":"Apply check_url_status() function sample download URLs.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement check_url_status — check_urls","text":"","code":"check_urls(urls = urls, size = NULL, method = c(\"HEAD\", \"GET\", \"SKIP\"))"},{"path":"https://kyle-messier.github.io/amadeus/reference/check_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement check_url_status — check_urls","text":"urls character vector URLs size number observations sampled urls method httr method obtain URL (\"HEAD\" \"GET\"). set \"SKIP\", HTTP status checked returned.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/check_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implement check_url_status — check_urls","text":"logical vector URL status = 200","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_aqs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download air quality data — download_aqs_data","title":"Download air quality data — download_aqs_data","text":"download_aqs_data() function accesses downloads Air Quality System (AQS) data U.S. Environmental Protection Agency's (EPA) Pre-Generated Data Files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_aqs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download air quality data — download_aqs_data","text":"","code":"download_aqs_data(   parameter_code = 88101,   resolution_temporal = \"daily\",   year_start = 2018,   year_end = 2022,   url_aqs_download = \"https://aqs.epa.gov/aqsweb/airdata/\",   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_aqs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download air quality data — download_aqs_data","text":"parameter_code integer(1). length 5. EPA pollutant parameter code. details, please refer AQS parameter codes resolution_temporal character(1). Name column containing POC values. Currently, value \"daily\" works. year_start integer(1). length 4. Start year downloading data. year_end integer(1). length 4. End year downloading data. url_aqs_download character(1). URL AQS pre-generated datasets. directory_to_download character(1). Directory download zip files AQS data mart. directory_to_save character(1). Directory decompress zip files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. Default FALSE. unzip logical(1). Unzip zip files. Default TRUE. remove_zip logical(1). Remove zip file directory_to_download. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_aqs_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download air quality data — download_aqs_data","text":"NULL; Separate comma-separated value (CSV) files monitors daily representative values stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_aqs_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download air quality data — download_aqs_data","text":"Mariana Kassien, Insang Song, Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download raw data wrapper function — download_data","title":"Download raw data wrapper function — download_data","text":"download_data() function accesses downloads atmospheric, meteorological, environmental data various open-access data sources.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download raw data wrapper function — download_data","text":"","code":"download_data(   dataset_name = c(\"aqs\", \"ecoregion\", \"geos\", \"gmted\", \"koppen\", \"koppengeiger\",     \"merra2\", \"merra\", \"narr_monolevel\", \"modis\", \"narr_p_levels\", \"nlcd\", \"noaa\",     \"sedac_groads\", \"sedac_population\", \"groads\", \"population\", \"plevels\", \"p_levels\",     \"monolevel\", \"hms\", \"smoke\", \"tri\", \"nei\"),   directory_to_save = NULL,   acknowledgement = FALSE,   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download raw data wrapper function — download_data","text":"dataset_name character(1). Dataset download. directory_to_save character(1). Directory save / unzip (zip files downloaded) data. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. ... Arguments passed download function.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download raw data wrapper function — download_data","text":"download function names download_*_data formats","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/download_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download raw data wrapper function — download_data","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_ecoregion_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ecoregion data — download_ecoregion_data","title":"Download ecoregion data — download_ecoregion_data","text":"download_ecoregion_data() function accesses downloads United States Ecoregions data U.S. Environmental Protection Agency's (EPA) Ecorgions. Level 3 data, pieces information higher levels included, downloaded.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_ecoregion_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ecoregion data — download_ecoregion_data","text":"","code":"download_ecoregion_data(   epa_certificate_path = system.file(\"extdata/cacert_gaftp_epa.pem\", package = \"amadeus\"),   certificate_url =     \"http://cacerts.digicert.com/DigiCertGlobalG2TLSRSASHA2562020CA1-1.crt\",   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_ecoregion_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ecoregion data — download_ecoregion_data","text":"epa_certificate_path character(1). Path certificate file EPA DataCommons. Default 'extdata/cacert_gaftp_epa.pem' package installation path. certificate_url character(1). URL certificate file. See notes details. directory_to_download character(1). Directory download zip file Ecoregion level 3 shapefiles directory_to_save character(1). Directory decompress zip files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. unzip logical(1). Unzip zip files. Default TRUE. remove_zip logical(1). Remove zip file directory_to_download. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_ecoregion_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ecoregion data — download_ecoregion_data","text":"NULL;","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_ecoregion_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download ecoregion data — download_ecoregion_data","text":"EPA Data Commons certificate errors, follow steps : Click Lock icon address bar https://gaftp.epa.gov Click Show Certificate Access Details Find URL *.crt extension Currently bundle pre-downloaded crt PEM (accepted wget command) file ./inst/extdata. instruction certificate updates future.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_ecoregion_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download ecoregion data — download_ecoregion_data","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_epa_certificate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check EPA certificate — download_epa_certificate","title":"Check EPA certificate — download_epa_certificate","text":"Check EPA certificate","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_epa_certificate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check EPA certificate — download_epa_certificate","text":"","code":"download_epa_certificate(   epa_certificate_path = \"cacert_gaftp_epa.pem\",   certificate_url =     \"http://cacerts.digicert.com/DigiCertGlobalG2TLSRSASHA2562020CA1-1.crt\" )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_epa_certificate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check EPA certificate — download_epa_certificate","text":"epa_certificate_path character(1). Full path converted certificate EPA. end .pem certificate_url character(1). URL original certificate.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_epa_certificate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check EPA certificate — download_epa_certificate","text":"file designated epa_certificate_path","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_epa_certificate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check EPA certificate — download_epa_certificate","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_geos_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download atmospheric composition data — download_geos_data","title":"Download atmospheric composition data — download_geos_data","text":"download_geos_data() function accesses downloads various atmospheric composition collections NASA's Global Earth Observing System (GEOS) model.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_geos_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download atmospheric composition data — download_geos_data","text":"","code":"download_geos_data(   collection = c(\"aqc_tavg_1hr_g1440x721_v1\", \"chm_tavg_1hr_g1440x721_v1\",     \"met_tavg_1hr_g1440x721_x1\", \"xgc_tavg_1hr_g1440x721_x1\",     \"chm_inst_1hr_g1440x721_p23\", \"met_inst_1hr_g1440x721_p23\"),   date_start = \"2023-09-01\",   date_end = \"2023-09-01\",   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_geos_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download atmospheric composition data — download_geos_data","text":"collection character(1). GEOS-CF data collection file name. date_start character(1). length 10. Start date downloading data. Format YYYY-MM-DD (ex. September 1, 2023 = \"2023-09-01\"). date_end character(1). length 10. End date downloading data. Format YYYY-MM-DD (ex. September 1, 2023 = \"2023-09-01\"). directory_to_save character(1). Directory save data. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_geos_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download atmospheric composition data — download_geos_data","text":"NULL; Hourly netCDF (.nc4) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_geos_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download atmospheric composition data — download_geos_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_gmted_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download elevation data — download_gmted_data","title":"Download elevation data — download_gmted_data","text":"download_gmted_data() function accesses downloads Global Multi-resolution Terrain Elevation Data (GMTED2010) U.S. Geological Survey National Geospatial-Intelligence Agency.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_gmted_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download elevation data — download_gmted_data","text":"","code":"download_gmted_data(   statistic = c(\"Breakline Emphasis\", \"Systematic Subsample\", \"Median Statistic\",     \"Minimum Statistic\", \"Mean Statistic\", \"Maximum Statistic\",     \"Standard Deviation Statistic\"),   resolution = c(\"7.5 arc-seconds\", \"15 arc-seconds\", \"30 arc-seconds\"),   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_gmted_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download elevation data — download_gmted_data","text":"statistic character(1). Available statistics include \"Breakline Emphasis\", \"Systematic Subsample\", \"Median Statistic\", \"Minimum Statistic\", \"Mean Statistic\", \"Maximum Statistic\", \"Standard Deviation Statistic\". resolution character(1). Available resolutions include \"7.5 arc-seconds\", \"15 arc-seconds\", \"30 arc-seconds\". directory_to_download character(1). Directory download zip files Global Multi-resolution Terrain Elevation Data (GMTED2010). directory_to_save character(1). Directory decompress zip files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. Default FALSE. unzip logical(1). Unzip zip files. Default TRUE. remove_zip logical(1). Remove zip file directory_to_download. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_gmted_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download elevation data — download_gmted_data","text":"NULL; Statistic resolution-specific zip files stored directory_to_download, directories containing raw ASCII Grid data stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_gmted_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download elevation data — download_gmted_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_hms_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download wildfire smoke data — download_hms_data","title":"Download wildfire smoke data — download_hms_data","text":"download_hms_data() function accesses downloads wildfire smoke plume coverage data NOAA's Hazard Mapping System Fire Smoke Product.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_hms_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download wildfire smoke data — download_hms_data","text":"","code":"download_hms_data(   data_format = \"Shapefile\",   date_start = \"2023-09-01\",   date_end = \"2023-09-01\",   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_hms_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download wildfire smoke data — download_hms_data","text":"data_format character(1). \"Shapefile\" \"KML\". date_start character(1). length 10. Start date downloading data. Format YYYY-MM-DD (ex. September 1, 2023 \"2023-09-01\"). date_end character(1). length 10. End date downloading data. Format YYYY-MM-DD (ex. September 10, 2023 \"2023-09-10\"). directory_to_download character(1). Directory download zip files NOAA Hazard Mapping System Fire Smoke Product. (Ignored data_format = \"KML\".) directory_to_save character(1). Directory save unzipped shapefiles KML files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. unzip logical(1). Unzip zip files. Default TRUE. (Ignored data_format = \"KML\".) remove_zip logical(1). Remove zip files directory_to_download. Default FALSE. (Ignored data_format = \"KML\".)","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_hms_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download wildfire smoke data — download_hms_data","text":"NULL; Zip file stored directory_to_download, Shapefiles (.shp) KML files (.kml) stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_hms_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download wildfire smoke data — download_hms_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_koppen_geiger_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download climate classification data — download_koppen_geiger_data","title":"Download climate classification data — download_koppen_geiger_data","text":"download_koppen_geiger_data() function accesses downloads climate classification data Present future Köppen-Geiger climate classification maps 1-km resolution(link article; link data).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_koppen_geiger_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download climate classification data — download_koppen_geiger_data","text":"","code":"download_koppen_geiger_data(   data_resolution = c(\"0.0083\", \"0.083\", \"0.5\"),   time_period = c(\"Present\", \"Future\"),   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_koppen_geiger_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download climate classification data — download_koppen_geiger_data","text":"data_resolution character(1). Available resolutions \"0.0083\" degrees (approx. 1 km), \"0.083\" degrees (approx. 10 km), \"0.5\" degrees (approx. 50 km). time_period character(1). Available times \"Present\" (1980-2016) \"Future\" (2071-2100). (\"Future\" classifications based scenario RCP8.5). directory_to_download character(1). Directory download zip files Present future Köppen-Geiger climate classification maps 1-km resolution. directory_to_save character(1). Directory decompress zip files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. unzip logical(1). Unzip zip files. Default TRUE. remove_zip logical(1). Remove zip files directory_to_download. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_koppen_geiger_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download climate classification data — download_koppen_geiger_data","text":"NULL; Zip file stored directory_to_download, selected GeoTIFF (.tif) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_koppen_geiger_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download climate classification data — download_koppen_geiger_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_merra2_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download meteorological and atmospheric data — download_merra2_data","title":"Download meteorological and atmospheric data — download_merra2_data","text":"download_merra2_data() function accesses downloads various meteorological atmospheric collections NASA's Modern-Era Retrospective analysis Research Applications, Version 2 (MERRA-2) model.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_merra2_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download meteorological and atmospheric data — download_merra2_data","text":"","code":"download_merra2_data(   collection = c(\"inst1_2d_asm_Nx\", \"inst1_2d_int_Nx\", \"inst1_2d_lfo_Nx\",     \"inst3_3d_asm_Np\", \"inst3_3d_aer_Nv\", \"inst3_3d_asm_Nv\", \"inst3_3d_chm_Nv\",     \"inst3_3d_gas_Nv\", \"inst3_2d_gas_Nx\", \"inst6_3d_ana_Np\", \"inst6_3d_ana_Nv\",     \"statD_2d_slv_Nx\", \"tavg1_2d_adg_Nx\", \"tavg1_2d_aer_Nx\", \"tavg1_2d_chm_Nx\",     \"tavg1_2d_csp_Nx\", \"tavg1_2d_flx_Nx\", \"tavg1_2d_int_Nx\", \"tavg1_2d_lfo_Nx\",     \"tavg1_2d_lnd_Nx\", \"tavg1_2d_ocn_Nx\", \"tavg1_2d_rad_Nx\", \"tavg1_2d_slv_Nx\",     \"tavg3_3d_mst_Ne\", \"tavg3_3d_trb_Ne\", \"tavg3_3d_nav_Ne\", \"tavg3_3d_cld_Np\",           \"tavg3_3d_mst_Np\", \"tavg3_3d_rad_Np\", \"tavg3_3d_tdt_Np\", \"tavg3_3d_trb_Np\",     \"tavg3_3d_udt_Np\", \"tavg3_3d_odt_Np\", \"tavg3_3d_qdt_Np\", \"tavg3_3d_asm_Nv\",     \"tavg3_3d_cld_Nv\", \"tavg3_3d_mst_Nv\", \"tavg3_3d_rad_Nv\", \"tavg3_2d_glc_Nx\"),   date_start = \"2023-09-01\",   date_end = \"2023-09-01\",   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_merra2_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download meteorological and atmospheric data — download_merra2_data","text":"collection character(1). MERRA-2 data collection file name. date_start character(1). length 10. Start date downloading data. Format YYYY-MM-DD (ex. September 1, 2023 \"2023-09-01\"). date_end character(1). length 10. End date downloading data. Format YYYY-MM-DD (ex. September 1, 2023 \"2023-09-01\"). directory_to_save character(1). Directory save data. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_merra2_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download meteorological and atmospheric data — download_merra2_data","text":"NULL; Daily netCDF (.nc4) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_merra2_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download meteorological and atmospheric data — download_merra2_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_modis_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download MODIS product files — download_modis_data","title":"Download MODIS product files — download_modis_data","text":"Need maintenance directory path change NASA EOSDIS. function first retrieves hdf download links certain day, selects relevant tiles retrieved links. Download done queried horizontal-vertical tile number combinations. exception MOD06_L2 product, produced every five minutes every day.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_modis_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download MODIS product files — download_modis_data","text":"","code":"download_modis_data(   product = c(\"MOD09GA\", \"MOD11A1\", \"MOD06_L2\", \"MCD19A2\", \"MOD13A2\", \"VNP46A2\"),   version = \"61\",   horizontal_tiles = c(7, 13),   vertical_tiles = c(3, 6),   mod06_links = NULL,   nasa_earth_data_token = NULL,   date_start = \"2023-09-01\",   date_end = \"2023-09-01\",   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_modis_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download MODIS product files — download_modis_data","text":"product character(1). One c(\"MOD09GA\", \"MOD11A1\", \"MOD06_L2\", \"MCD19A2\", \"MOD13A2\", \"VNP46A2\") version character(1). Default \"61\", meaning v061. horizontal_tiles integer(2). Horizontal tile numbers c({start}, {end}). Default c(7, 13). vertical_tiles integer(2). Vertical tile numbers c({start}, {end}). Default c(3, 6). mod06_links character(1). CSV file path MOD06_L2 download links NASA LPDAAC. Default NULL. nasa_earth_data_token character(1). Token downloading data NASA. set trying running function. date_start character(1). length 10. Start date downloading data. Format YYYY-MM-DD (ex. September 1, 2023 \"2023-09-01\"). date_end character(1). length 10. End date downloading data. Format YYYY-MM-DD (ex. September 1, 2023 \"2023-09-01\"). directory_to_save character(1). Directory save data. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). Download data save wget commands. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_modis_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download MODIS product files — download_modis_data","text":"NULL; Raw HDF (.hdf) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_modis_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download MODIS product files — download_modis_data","text":"date_start date_end year. Directory structure looks like input/modis/raw/{version}/{product}/{year}/{day_of_year} Please note date_start date_end ignored product == 'MOD06_L2'.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_modis_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download MODIS product files — download_modis_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_monolevel_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download meteorological data (monolevel) — download_narr_monolevel_data","title":"Download meteorological data (monolevel) — download_narr_monolevel_data","text":"download_narr_monolevel_data function accesses downloads monolevel meteorological data NOAA's North American Regional Reanalysis (NARR) model. \"Monolevel\" variables contain single value entire atmospheric column (ie. Variable: Convective cloud cover; Level: Entire atmosphere considered single layer), represent specific altitude associated variable (ie. Variable: Air temperature; Level: 2 m).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_monolevel_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download meteorological data (monolevel) — download_narr_monolevel_data","text":"","code":"download_narr_monolevel_data(   variables = NULL,   year_start = 2022,   year_end = 2022,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_monolevel_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download meteorological data (monolevel) — download_narr_monolevel_data","text":"variables character. Variable(s) name acronym. year_start integer(1). length 4. Start year range downloading data. year_end integer(1). length 4. End year range downloading data. directory_to_save character(1). Directory(s) save downloaded data files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_monolevel_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download meteorological data (monolevel) — download_narr_monolevel_data","text":"NULL; Yearly netCDF (.nc) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_monolevel_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download meteorological data (monolevel) — download_narr_monolevel_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_p_levels_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download meteorological data (pressure levels) — download_narr_p_levels_data","title":"Download meteorological data (pressure levels) — download_narr_p_levels_data","text":"download_narr_p_levels_data function accesses downloads pressure levels meteorological data NOAA's North American Regional Reanalysis (NARR) model. \"Pressure levels\" variables contain variable values 29 atmospheric levels, ranging 1000 hPa 100 hPa. pressure levels data downloaded variable.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_p_levels_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download meteorological data (pressure levels) — download_narr_p_levels_data","text":"","code":"download_narr_p_levels_data(   variables = NULL,   year_start = 2022,   year_end = 2022,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_p_levels_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download meteorological data (pressure levels) — download_narr_p_levels_data","text":"variables character(1). Variable(s) name acronym. year_start integer(1). length 4. Start year range downloading data. year_end integer(1). length 4. End year range downloading data. directory_to_save character(1). Directory(s) save downloaded data files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_p_levels_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download meteorological data (pressure levels) — download_narr_p_levels_data","text":"NULL; Monthly netCDF (.nc) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_narr_p_levels_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download meteorological data (pressure levels) — download_narr_p_levels_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nei_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download road emissions data — download_nei_data","title":"Download road emissions data — download_nei_data","text":"download_nei_data() function accesses downloads road emissions data U.S Environmental Protection Agency's (EPA) National Emissions Inventory (NEI).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nei_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download road emissions data — download_nei_data","text":"","code":"download_nei_data(   epa_certificate_path = system.file(\"extdata/cacert_gaftp_epa.pem\", package = \"amadeus\"),   certificate_url =     \"http://cacerts.digicert.com/DigiCertGlobalG2TLSRSASHA2562020CA1-1.crt\",   year_target = c(2017L, 2020L),   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nei_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download road emissions data — download_nei_data","text":"epa_certificate_path character(1). Path certificate file EPA DataCommons. Default 'extdata/cacert_gaftp_epa.pem' package installation path. certificate_url character(1). URL certificate file. See notes details. year_target Available years NEI data. Default c(2017L, 2020L). directory_to_save character(1). Directory download files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. unzip logical(1). Unzip downloaded zip files. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nei_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download road emissions data — download_nei_data","text":"NULL; Yearly comma-separated value (CSV) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nei_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download road emissions data — download_nei_data","text":"EPA Data Commons certificate errors, follow steps : Click Lock icon address bar https://gaftp.epa.gov Click Show Certificate Access Details Find URL *.crt extension Currently bundle pre-downloaded crt PEM (accepted wget command) file ./inst/extdata. instruction certificate updates future.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nei_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download road emissions data — download_nei_data","text":"Ranadeep Daw, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nlcd_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download land cover data — download_nlcd_data","title":"Download land cover data — download_nlcd_data","text":"download_nlcd_data() function accesses downloads land cover data Multi-Resolution Land Characteristics (MRLC) Consortium's National Land Cover Database (NLCD) products data base.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nlcd_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download land cover data — download_nlcd_data","text":"","code":"download_nlcd_data(   collection = \"Coterminous United States\",   year = 2021,   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nlcd_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download land cover data — download_nlcd_data","text":"collection character(1). \"Coterminous United States\" \"Alaska\". year integer(1). Available years Coterminous United States include 2001, 2004, 2006, 2008, 2011, 2013, 2016, 2019, 2021. Available years Alaska include 2001, 2011, 2016. directory_to_download character(1). Directory download zip files National Land Cover Database Science Research Products. directory_to_save character(1). Directory decompress zip files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. unzip logical(1). Unzip zip files. Default TRUE. remove_zip logical(1). Remove zip files directory_to_download. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nlcd_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download land cover data — download_nlcd_data","text":"NULL; Zip file stored directory_to_download, selected GeoTIFF (.tif) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_nlcd_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download land cover data — download_nlcd_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_permit.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data download acknowledgement — download_permit","title":"Check data download acknowledgement — download_permit","text":"Return error acknowledgement = FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_permit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data download acknowledgement — download_permit","text":"","code":"download_permit(acknowledgement)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_permit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data download acknowledgement — download_permit","text":"acknowledgement logical(1). Whether start downloading","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_permit.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check data download acknowledgement — download_permit","text":"acknowledgement parameter designed help users avoid accidentally initiating large data download may take long time run exceed machine capabilities.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_remove_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove download commands — download_remove_command","title":"Remove download commands — download_remove_command","text":"Remove retain .txt file storing download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_remove_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove download commands — download_remove_command","text":"","code":"download_remove_command(commands_txt = NULL, remove = FALSE)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_remove_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove download commands — download_remove_command","text":"commands_txt character(1). Path download commands remove logical(1). Remove (TRUE) keep (FALSE) commands","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_remove_zips.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove zip files — download_remove_zips","title":"Remove zip files — download_remove_zips","text":"Remove downloaded \".zip\" files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_remove_zips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove zip files — download_remove_zips","text":"","code":"download_remove_zips(remove = FALSE, download_name)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_remove_zips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove zip files — download_remove_zips","text":"remove logical(1). Confirm removal. Default FALSE. download_name character. Full zip file path","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_remove_zips.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove zip files — download_remove_zips","text":"remove = TRUE, ensure unzip = TRUE. Choosing remove \".zip\" files without unzipping retain none downloaded data.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run download commands — download_run","title":"Run download commands — download_run","text":"Execute skip commands listed ...wget/curl_commands.txt file produced one data download functions.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run download commands — download_run","text":"","code":"download_run(download = FALSE, system_command = NULL)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run download commands — download_run","text":"download logical(1). Execute (TRUE) skip (FALSE) download. system_command character(1). Linux command execute downloads. Inherited data download function.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sanitize_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize directory — download_sanitize_path","title":"Sanitize directory — download_sanitize_path","text":"Append forward slash end directory already end one.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sanitize_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize directory — download_sanitize_path","text":"","code":"download_sanitize_path(directory)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sanitize_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize directory — download_sanitize_path","text":"directory character(1). Path","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sanitize_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize directory — download_sanitize_path","text":"character ending forward slash.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_groads_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download roads data — download_sedac_groads_data","title":"Download roads data — download_sedac_groads_data","text":"download_sedac_groads_data() function accesses downloads roads data NASA's Global Roads Open Access Data Set (gROADS), v1 (1980-2010).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_groads_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download roads data — download_sedac_groads_data","text":"","code":"download_sedac_groads_data(   data_region = c(\"Americas\", \"Global\", \"Africa\", \"Asia\", \"Europe\", \"Oceania East\",     \"Oceania West\"),   data_format = c(\"Shapefile\", \"Geodatabase\"),   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_groads_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download roads data — download_sedac_groads_data","text":"data_region character(1). Data can downloaded \"Global\", \"Africa\", \"Asia\", \"Europe\", \"Americas\", \"Oceania East\", \"Oceania West\". data_format character(1). Data can downloaded \"Shapefile\" \"Geodatabase\". (\"Geodatabase\" available \"Global\" region). directory_to_download character(1). Directory download zip files NASA Global Roads Open Access Data Set. directory_to_save character(1). Directory decompress zip files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. unzip logical(1). Unzip zip files. Default TRUE. remove_zip logical(1). Remove zip files directory_to_download. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_groads_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download roads data — download_sedac_groads_data","text":"NULL; Zip file stored directory_to_download, selected Shapefile (.shp) Geodatabase (.gdb) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_groads_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download roads data — download_sedac_groads_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_population_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download population density data — download_sedac_population_data","title":"Download population density data — download_sedac_population_data","text":"download_sedac_population_data() function accesses downloads population density data NASA's UN WPP-Adjusted Population Density, v4.11.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_population_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download population density data — download_sedac_population_data","text":"","code":"download_sedac_population_data(   data_resolution = \"60 minute\",   data_format = c(\"GeoTIFF\", \"ASCII\", \"netCDF\"),   year = \"2020\",   directory_to_download = NULL,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE,   unzip = TRUE,   remove_zip = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_population_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download population density data — download_sedac_population_data","text":"data_resolution character(1). Available resolutions 30 second (approx. 1 km), 2.5 minute (approx. 5 km), 15 minute (approx. 30 km), 30 minute (approx. 55 km), 60 minute (approx. 110 km). data_format character(1). Individual year data can downloaded \"ASCII\" \"GeoTIFF\". \"\" years downloaded \"netCDF\". year character(1). Available years 2000, 2005, 2010, 2015, 2020, \"\" years. directory_to_download character(1). Directory download zip files NASA UN WPP-Adjusted Population Density, v4.11. directory_to_save character(1). Directory decompress zip files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands. unzip logical(1). Unzip zip files. Default TRUE. remove_zip logical(1). Remove zip files directory_to_download. Default FALSE.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_population_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download population density data — download_sedac_population_data","text":"NULL; Zip file stored directory_to_download, selected GeoTIFF (.tif) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sedac_population_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download population density data — download_sedac_population_data","text":"Mitchell Manware, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_setup_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup directory — download_setup_dir","title":"Setup directory — download_setup_dir","text":"Create directory already exist. directory exist, directory created.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_setup_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup directory — download_setup_dir","text":"","code":"download_setup_dir(directory)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_setup_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup directory — download_setup_dir","text":"directory character(1) directory path","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sink.html","id":null,"dir":"Reference","previous_headings":"","what":"Sink download commands — download_sink","title":"Sink download commands — download_sink","text":"Open connection command_txt file store download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sink download commands — download_sink","text":"","code":"download_sink(command_txt)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_sink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sink download commands — download_sink","text":"command_txt character(1). file path export commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_tri_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download toxic release data — download_tri_data","title":"Download toxic release data — download_tri_data","text":"download_tri_data() function accesses downloads toxic release data U.S. Environmental Protection Agency's (EPA) Toxic Release Inventory (TRI) Program.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_tri_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download toxic release data — download_tri_data","text":"","code":"download_tri_data(   year_start = 2018L,   year_end = 2022L,   directory_to_save = NULL,   acknowledgement = FALSE,   download = FALSE,   remove_command = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_tri_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download toxic release data — download_tri_data","text":"year_start integer(1). length 4. Start year downloading data. year_end integer(1). length 4. End year downloading data. directory_to_save character(1). Directory download files. acknowledgement logical(1). setting TRUE user acknowledges data downloaded using function may large use lots machine storage memory. download logical(1). FALSE generate *.txt file containing download commands. setting TRUE function download requested data files. remove_command logical(1). Remove (TRUE) keep (FALSE) text file containing download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_tri_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download toxic release data — download_tri_data","text":"NULL; Yearly comma-separated value (CSV) files stored directory_to_save.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_tri_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download toxic release data — download_tri_data","text":"Mariana Kassien, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_unzip.html","id":null,"dir":"Reference","previous_headings":"","what":"Unzip zip files — download_unzip","title":"Unzip zip files — download_unzip","text":"Unzip (inflate) downloaded \".zip\" files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/download_unzip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unzip zip files — download_unzip","text":"","code":"download_unzip(file_name, directory_to_unzip, unzip = TRUE)"},{"path":"https://kyle-messier.github.io/amadeus/reference/download_unzip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unzip zip files — download_unzip","text":"file_name character(1). Full zip file path directory_to_unzip character(1). Directory unzip data unzip logical(1). Unzip (TRUE) .","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/dt_as_mysftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.table to an sftime — dt_as_mysftime","title":"Convert a data.table to an sftime — dt_as_mysftime","text":"Convert data.table object sftime. x must data.table object \"lon\", \"lat\", \"time\" columns describe longitude, latitude, time-orientation, respectively, x.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/dt_as_mysftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.table to an sftime — dt_as_mysftime","text":"","code":"dt_as_mysftime(x, lonname, latname, timename, crs)"},{"path":"https://kyle-messier.github.io/amadeus/reference/dt_as_mysftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.table to an sftime — dt_as_mysftime","text":"x data.table lonname character longitude column name latname character latitude column name timename character time column name crs coordinate reference system","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/dt_as_mysftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.table to an sftime — dt_as_mysftime","text":"sftime object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/dt_as_mysftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a data.table to an sftime — dt_as_mysftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/extract_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract download URLs — extract_urls","title":"Extract download URLs — extract_urls","text":"Extract download URLs multi-argument download commands.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/extract_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract download URLs — extract_urls","text":"","code":"extract_urls(commands = commands, position = NULL)"},{"path":"https://kyle-messier.github.io/amadeus/reference/extract_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract download URLs — extract_urls","text":"commands character vector containing download commands position URL position vector","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/extract_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract download URLs — extract_urls","text":"character vector containing download URLs","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_date_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate date sequence — generate_date_sequence","title":"Generate date sequence — generate_date_sequence","text":"Generate sequence dates date_start date_end.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_date_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate date sequence — generate_date_sequence","text":"","code":"generate_date_sequence(date_start, date_end, sub_hyphen = TRUE)"},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_date_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate date sequence — generate_date_sequence","text":"date_start character(1). Beginning date sequence. date_end character(1). End date sequence. sub_hyphen logical(1). Substitute hyphen dates. TRUE, returns date sequence \"YYYYMMDD\". FALSE, returns date sequence \"YYYY-MM-DD\".","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_date_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate date sequence — generate_date_sequence","text":"vector","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_time_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate time sequence — generate_time_sequence","title":"Generate time sequence — generate_time_sequence","text":"Generate sequence time values based GEOS-CF collection.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_time_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate time sequence — generate_time_sequence","text":"","code":"generate_time_sequence(collection)"},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_time_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate time sequence — generate_time_sequence","text":"collection character(1). GEOS-CF data collection","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_time_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate time sequence — generate_time_sequence","text":"vector","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/generate_time_sequence.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate time sequence — generate_time_sequence","text":"GEOS-CF hourly values observed hour (ie. 0000 = 12:00:00 , 0100 = 01:00:00 ) half hour (ie. 0030 = 12:30:00 , 0130 = 01:30:00 ). Typically, 2-dimensional collections (latitute longitude ) utilize half hour, 3-dimensional collections (latitute, longitude, time) utilize hour.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/is_date_proper.html","id":null,"dir":"Reference","previous_headings":"","what":"Check date format — is_date_proper","title":"Check date format — is_date_proper","text":"Check date input strings conform required format.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/is_date_proper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check date format — is_date_proper","text":"","code":"is_date_proper(instr = NULL, format = \"%Y-%m-%d\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/is_date_proper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check date format — is_date_proper","text":"instr character(1). String check. format character(1). Matching format checked. Default \"%Y-%m-%d\", can detect \"%Y/%m/%d. See strftime details formatting string.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/is_date_proper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check date format — is_date_proper","text":"returning value. stops function instr conform format.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/is_date_proper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check date format — is_date_proper","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_aqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Process unique U.S. EPA AQS sites — process_aqs","title":"Process unique U.S. EPA AQS sites — process_aqs","text":"process_aqs() function cleans imports raw air quality monitoring sites, returning single SpatVector sf object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_aqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process unique U.S. EPA AQS sites — process_aqs","text":"","code":"process_aqs(   path = NULL,   date = c(\"2018-01-01\", \"2022-12-31\"),   return_format = \"terra\" )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_aqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process unique U.S. EPA AQS sites — process_aqs","text":"path character(1). Directory path daily measurement data. date character(2). Start end date. \"YYYY-MM-DD\" format sorted. NULL, unique locations returned. return_format character(1). \"terra\" \"sf\".","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_aqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process unique U.S. EPA AQS sites — process_aqs","text":"SpatVector sf object depending return_format","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_aqs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process unique U.S. EPA AQS sites — process_aqs","text":"date = NULL return massive data.table object. Please choose proper date values.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign VIIRS Blue Marble products corner coordinates to retrieve a merged raster — process_bluemarble","title":"Assign VIIRS Blue Marble products corner coordinates to retrieve a merged raster — process_bluemarble","text":"function return SpatRaster object georeferenced h5 files Blue Marble product. Referencing corner coordinates necessary original h5 data include information.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign VIIRS Blue Marble products corner coordinates to retrieve a merged raster — process_bluemarble","text":"","code":"process_bluemarble(   path = NULL,   date = NULL,   tile_df = process_bluemarble_corners(),   subdataset = 3L,   crs = \"EPSG:4326\",   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign VIIRS Blue Marble products corner coordinates to retrieve a merged raster — process_bluemarble","text":"path character. Full paths h5 files. date character(1). Date query. tile_df data.frame. Contains four corner coordinates fields named c(\"xmin\", \"xmax\", \"ymin\", \"ymax\"). See process_bluemarble_corners generate valid object argument. subdataset integer(1). Subdataset number process. Default 3L. crs character(1). terra::crs compatible CRS. Default \"EPSG:4326\" ... internal use.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign VIIRS Blue Marble products corner coordinates to retrieve a merged raster — process_bluemarble","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Assign VIIRS Blue Marble products corner coordinates to retrieve a merged raster — process_bluemarble","text":"Wang, Z. (2022). Blue Marble User Guide (Version 1.3). NASA.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign VIIRS Blue Marble products corner coordinates to retrieve a merged raster — process_bluemarble","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble_corners.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Blue Marble corners — process_bluemarble_corners","title":"Process Blue Marble corners — process_bluemarble_corners","text":"Tile corner generator Blue Marble products. Blue Marble products HDF5 format read without georeference typical R geospatial packages. function generates data.frame corner coordinates assignment.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble_corners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Blue Marble corners — process_bluemarble_corners","text":"","code":"process_bluemarble_corners(hrange = c(5, 11), vrange = c(3, 6))"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble_corners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Blue Marble corners — process_bluemarble_corners","text":"hrange integer(2). 0-35. vrange integer(2). 0-17.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble_corners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Blue Marble corners — process_bluemarble_corners","text":"data.frame xmin, xmax, ymin, ymax fields","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble_corners.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Process Blue Marble corners — process_bluemarble_corners","text":"Wang, Z. (2022). Blue Marble User Guide (Version 1.3). NASA.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_bluemarble_corners.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process Blue Marble corners — process_bluemarble_corners","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_collection.html","id":null,"dir":"Reference","previous_headings":"","what":"Process GEOS-CF and MERRA2 collection codes — process_collection","title":"Process GEOS-CF and MERRA2 collection codes — process_collection","text":"Identify GEOS-CF MERRA2 collection based file path.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_collection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process GEOS-CF and MERRA2 collection codes — process_collection","text":"","code":"process_collection(   path,   source,   collection = FALSE,   date = FALSE,   datetime = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_collection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process GEOS-CF and MERRA2 collection codes — process_collection","text":"path character(1). File path data file. source character(1). \"geos\" GEOS-CF \"merra2\" MERRA2 collection logical(1). Identifies returns collection name(s) based provided file path(s). date logical(1). Identifies returns date sequence (YYYYMMDD) based provided file path(s). datetime logical(1). Identifies returns date time sequence (YYYYMoMoDDHHMiMi) based provided file path(s).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_collection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process GEOS-CF and MERRA2 collection codes — process_collection","text":"character","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_conformity.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input assumptions — process_conformity","title":"Check input assumptions — process_conformity","text":"Check \"lon\", \"lat\", \"time\" (check_time = TRUE) convert inputs SpatVector object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_conformity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input assumptions — process_conformity","text":"","code":"process_conformity(locs = NULL, check_time = FALSE, locs_epsg = \"EPSG:4326\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_conformity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input assumptions — process_conformity","text":"locs Data. sf, SpatVector, data.frame check_time logical(1). Whether \"time\" exists column names. locs_epsg character(1). \"{authority}:{code}\" Well-Known Text format coordinate reference system definition.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_conformity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input assumptions — process_conformity","text":"SpatVector object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_conformity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check input assumptions — process_conformity","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Process raw data wrapper function — process_covariates","title":"Process raw data wrapper function — process_covariates","text":"function processes raw data files downloaded download_data. process_covariates underlying source-specific processing functions designed operate raw data files. avoid errors, edit raw data files passing process_covariates.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process raw data wrapper function — process_covariates","text":"","code":"process_covariates(   covariate = c(\"modis_swath\", \"modis_merge\", \"koppen-geiger\", \"bluemarble\",     \"koeppen-geiger\", \"koppen\", \"koeppen\", \"geos\", \"dummies\", \"gmted\", \"hms\", \"smoke\",     \"sedac_population\", \"population\", \"sedac_groads\", \"groads\", \"roads\", \"nlcd\", \"tri\",     \"narr\", \"nei\", \"ecoregions\", \"ecoregion\", \"merra\", \"MERRA2\", \"merra2\", \"MERRA2\"),   path = NULL,   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process raw data wrapper function — process_covariates","text":"covariate character(1). Covariate type. path character(1). Directory file path raw data depending covariate value. ... Arguments passed raw data processing function.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process raw data wrapper function — process_covariates","text":"SpatVector, SpatRaster, sf, character depending covariate type selections.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/process_covariates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process raw data wrapper function — process_covariates","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_ecoregion.html","id":null,"dir":"Reference","previous_headings":"","what":"Process ecoregion data — process_ecoregion","title":"Process ecoregion data — process_ecoregion","text":"process_ecoregion function imports cleans raw ecoregion data, returning SpatVector object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_ecoregion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process ecoregion data — process_ecoregion","text":"","code":"process_ecoregion(path = NULL)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_ecoregion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process ecoregion data — process_ecoregion","text":"path character(1). Path Ecoregion Shapefiles","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_ecoregion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process ecoregion data — process_ecoregion","text":"SpatVector object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_ecoregion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process ecoregion data — process_ecoregion","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_flatten_sds.html","id":null,"dir":"Reference","previous_headings":"","what":"Process MODIS layers — process_flatten_sds","title":"Process MODIS layers — process_flatten_sds","text":"Aggregate layers sub-dataset sinusoidal MODIS products. MODIS products consist multi-layer subdatasets. function aggregates multiple layers single layer SpatRaster. fun_agg applied overlapping cells.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_flatten_sds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process MODIS layers — process_flatten_sds","text":"","code":"process_flatten_sds(path = NULL, subdataset = NULL, fun_agg = \"mean\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_flatten_sds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process MODIS layers — process_flatten_sds","text":"path character(1). Full path MODIS HDF4/HDF5 file. Direct sub-dataset access supported, example, HDF4_EOS:EOS_GRID:{filename}:{base_grid_information}:{sub-dataset} subdataset character(1). Exact regular expression filter sub-dataset. See process_modis_sds details. fun_agg character(1). Function name aggregate layers. acceptable terra::tapp.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_flatten_sds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process MODIS layers — process_flatten_sds","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_flatten_sds.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process MODIS layers — process_flatten_sds","text":"HDF values read original without scaling. Users consult MODIS product documentation apply proper scaling factor post-hoc adjustment. users preliminary information MODIS sub-datasets, consider running terra::describe(__filename__, sds = TRUE) navigate full list sub-datasets input file consult documentation MODIS product.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/process_flatten_sds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process MODIS layers — process_flatten_sds","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_geos.html","id":null,"dir":"Reference","previous_headings":"","what":"Process atmospheric composition data — process_geos","title":"Process atmospheric composition data — process_geos","text":"process_geos() function imports cleans raw atmospheric composition data, returning single SpatRaster object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_geos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process atmospheric composition data — process_geos","text":"","code":"process_geos(   date = c(\"2018-01-01\", \"2018-01-01\"),   variable = NULL,   path = NULL )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_geos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process atmospheric composition data — process_geos","text":"date character(2). length 10. Format \"YYYY-MM-DD\". variable character(1). GEOS-CF variable name(s). path character(1). Directory downloaded netCDF (.nc4) files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_geos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process atmospheric composition data — process_geos","text":"SpatRaster object;","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_geos.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process atmospheric composition data — process_geos","text":"Layer names returned SpatRaster object contain variable, pressure level, date, hour.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_geos.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process atmospheric composition data — process_geos","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted.html","id":null,"dir":"Reference","previous_headings":"","what":"Process elevation data — process_gmted","title":"Process elevation data — process_gmted","text":"process_gmted() function imports cleans raw elevation data, returning single SpatRaster object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process elevation data — process_gmted","text":"","code":"process_gmted(variable = NULL, path = NULL)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process elevation data — process_gmted","text":"variable vector(1). Vector containing GMTED statistic first resolution second. (Example: variable = c(\"Breakline Emphasis\", \"7.5 arc-seconds\")). path character(1). Directory downloaded GMTED  \"*_grd\" folder containing .adf files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process elevation data — process_gmted","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process elevation data — process_gmted","text":"SpatRaster layer name indicates selected variable resolution.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process elevation data — process_gmted","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Process elevation statistic and resolution codes — process_gmted_codes","title":"Process elevation statistic and resolution codes — process_gmted_codes","text":"Identify GMTED statistic resolution based file path. Convert statistic resolution /full string /statistic resolution code.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process elevation statistic and resolution codes — process_gmted_codes","text":"","code":"process_gmted_codes(   string,   statistic = FALSE,   resolution = FALSE,   invert = FALSE )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process elevation statistic and resolution codes — process_gmted_codes","text":"string character(1). File path GMTED data file. statistic logical(1). Matches statistic statistic code. resolution logical(1). Matches resolution resolution code. invert logical(1). Default = FALSE. invert = TRUE assumes string provides statistic resolution code, returns full length statistic resolution.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_gmted_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process elevation statistic and resolution codes — process_gmted_codes","text":"character","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_hms.html","id":null,"dir":"Reference","previous_headings":"","what":"Process wildfire smoke data — process_hms","title":"Process wildfire smoke data — process_hms","text":"process_hms() function imports cleans raw wildfire smoke plume coverage data, returning single SpatVector object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_hms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process wildfire smoke data — process_hms","text":"","code":"process_hms(   date = c(\"2018-01-01\", \"2018-01-01\"),   variable = c(\"Light\", \"Medium\", \"Heavy\"),   path = NULL )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_hms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process wildfire smoke data — process_hms","text":"date character(2). length 10 . Start/end date downloaded data. Format YYYY-MM-DD (ex. September 1, 2023 = \"2023-09-01\"). variable character(1). \"Light\", \"Medium\", \"Heavy\". path character(1). Directory downloaded NOAA HMS data files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_hms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process wildfire smoke data — process_hms","text":"SpatVector character object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_hms.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process wildfire smoke data — process_hms","text":"process_hms() return character object wildfire smoke plumes present selected dates density. returned character contain selected density value sequence dates wildfire smoke plumes detected (see \"Examples\").","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_hms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process wildfire smoke data — process_hms","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_hms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process wildfire smoke data — process_hms","text":"","code":"process_hms(   date = c(\"2018-12-30\", \"2019-01-01\"),   variable = \"Light\",   path = \"../tests/testdata/hms/\" ) #> Light smoke plume polygons absent from 2018-12-30 to 2019-01-01. Returning vector of dates. #> [1] \"Light\"    \"20181230\" \"20181231\" \"20190101\""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_koppen_geiger.html","id":null,"dir":"Reference","previous_headings":"","what":"Process climate classification data — process_koppen_geiger","title":"Process climate classification data — process_koppen_geiger","text":"process_koppen_geiger() function imports cleans raw climate classification data, returning single SpatRaster object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_koppen_geiger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process climate classification data — process_koppen_geiger","text":"","code":"process_koppen_geiger(path = NULL, year = NULL)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_koppen_geiger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process climate classification data — process_koppen_geiger","text":"path character(1). Path Koppen-Geiger climate zone raster file year data year. applicable function.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_koppen_geiger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process climate classification data — process_koppen_geiger","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_koppen_geiger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process climate classification data — process_koppen_geiger","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_radius.html","id":null,"dir":"Reference","previous_headings":"","what":"Process locations buffer — process_locs_radius","title":"Process locations buffer — process_locs_radius","text":"Create circular buffer around locations based user defined radius. Creates circular buffer around points radius > 0. Returns points radius 0.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_radius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process locations buffer — process_locs_radius","text":"","code":"process_locs_radius(locs, radius)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_radius.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process locations buffer — process_locs_radius","text":"locs SpatVector(1). SpatVector object point geometry radius integer(1). Circular buffer size (meters).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_radius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process locations buffer — process_locs_radius","text":"SpatVector object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Process locations as SpatVector — process_locs_vector","title":"Process locations as SpatVector — process_locs_vector","text":"Convert locations class data.frame data.table SpatVector object, project coordinate reference system, apply circular buffer.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process locations as SpatVector — process_locs_vector","text":"","code":"process_locs_vector(locs, crs, radius)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process locations as SpatVector — process_locs_vector","text":"locs data.frame(1). Data frame containing columns unique identifier, latitude, longitude. Latitude longitude columns must named \"lat\" \"lon\", respectively. crs Coordinate reference system (CRS) description utilizing terra::crs(). radius integer(1). Circular buffer size (meters).","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_locs_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process locations as SpatVector — process_locs_vector","text":"SpatVector object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2.html","id":null,"dir":"Reference","previous_headings":"","what":"Process meteorological and atmospheric data — process_merra2","title":"Process meteorological and atmospheric data — process_merra2","text":"process_merra2() function imports cleans raw atmospheric composition data, returning single SpatRaster object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process meteorological and atmospheric data — process_merra2","text":"","code":"process_merra2(   date = c(\"2018-01-01\", \"2018-01-01\"),   variable = NULL,   path = NULL )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process meteorological and atmospheric data — process_merra2","text":"date character(2). length 10. Format \"YYYY-MM-DD\". variable character(1). MERRA2 variable name(s). path character(1). Directory downloaded netCDF (.nc4) files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process meteorological and atmospheric data — process_merra2","text":"SpatRaster object;","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process meteorological and atmospheric data — process_merra2","text":"Layer names returned SpatRaster object contain variable, pressure level, date, hour. Pressure level values utilized layer names taken directly raw data edited retain pressure level information.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process meteorological and atmospheric data — process_merra2","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Process MERRA2 time steps — process_merra2_time","title":"Process MERRA2 time steps — process_merra2_time","text":"Identify time step data observations based MERRA2 collection filter time values .","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process MERRA2 time steps — process_merra2_time","text":"","code":"process_merra2_time(collection, from)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process MERRA2 time steps — process_merra2_time","text":"collection character(1). MERRA2 collection name. SpatRaster(1). Object extract time values .","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_merra2_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process MERRA2 time steps — process_merra2_time","text":"character","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Process MODIS .hdf files — process_modis_merge","title":"Process MODIS .hdf files — process_modis_merge","text":"Get mosaicked merged raster multiple MODIS hdf files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process MODIS .hdf files — process_modis_merge","text":"","code":"process_modis_merge(   path = NULL,   date = NULL,   subdataset = NULL,   fun_agg = \"mean\",   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process MODIS .hdf files — process_modis_merge","text":"path character. Full list hdf file paths. preferably recursive search result base::list.files. date character(1). date query. \"YYYY-MM-DD\" format. subdataset character(1). subdataset names extract. conform regular expression. See base::regex details. Default NULL, result errors. Users specify subdatasets imported. fun_agg Function name custom function aggregate overlapping cell values. See fun description terra::tapp details. ... internal use.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process MODIS .hdf files — process_modis_merge","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_merge.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process MODIS .hdf files — process_modis_merge","text":"Curvilinear products (.e., swaths) accepted. MODIS products downloaded functions amadeus, MODISTools, luna accepted.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_merge.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process MODIS .hdf files — process_modis_merge","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_sds.html","id":null,"dir":"Reference","previous_headings":"","what":"Process MODIS sub-datasets — process_modis_sds","title":"Process MODIS sub-datasets — process_modis_sds","text":"Selected MODIS sinusoidal grid product subdataset name selector. Four presets supported. custom_sel supersedes presets product values.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_sds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process MODIS sub-datasets — process_modis_sds","text":"","code":"process_modis_sds(   product = c(\"MOD11A1\", \"MOD13A2\", \"MOD09GA\", \"MCD19A2\"),   custom_sel = NULL )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_sds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process MODIS sub-datasets — process_modis_sds","text":"product character(1). Product code. custom_sel character(1). Custom filter. value NULL, preset filter overridden.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_sds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process MODIS sub-datasets — process_modis_sds","text":"character object conforms regular expression. Details regular expression R can found regexp.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_sds.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process MODIS sub-datasets — process_modis_sds","text":"Preset product codes associated variables include \"MOD11A1\" - Land surface temperature (LST) \"MOD13A2\" - Normalized Difference Vegetation Index (NDVI) \"MOD09GA\" - Surface reflectance, \"MCD19A2\" - Aerosol optical depth (AOD). full list available MODIS product codes, see \"Short Name\" column NASA LP DAAC Search Data Catalog. utilizing product code \"Short Name\" column, include version number following period. example, \"Short Name\" = MCD12C1.006, product = \"MCD12C1\".","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_sds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process MODIS sub-datasets — process_modis_sds","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_swath.html","id":null,"dir":"Reference","previous_headings":"","what":"Mosaic MODIS swaths — process_modis_swath","title":"Mosaic MODIS swaths — process_modis_swath","text":"function return SpatRaster object values selected subdatasets. Swath data include curvilinear grids, require warping/rectifying original curvilinear grids rectilinear grids. function internally warps inputs mosaic warped images one large SpatRaster object. Users need select subdataset process. full path looks like \"HDF4_EOS:EOS_SWATH:{file_path}:mod06:subdataset\", file_path full path hdf file.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_swath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mosaic MODIS swaths — process_modis_swath","text":"","code":"process_modis_swath(   path = NULL,   date = NULL,   subdataset = NULL,   suffix = \":mod06:\",   resolution = 0.025,   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_swath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mosaic MODIS swaths — process_modis_swath","text":"path character. Full paths hdf files. date character(1). Date query. subdataset character. Subdatasets process. suffix character(1). formatted :{product}:, e.g., :mod06: resolution numeric(1). Resolution output raster. Unit degree. ... internal use.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_swath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mosaic MODIS swaths — process_modis_swath","text":"SpatRaster object (crs = \"EPSG:4326\")","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_swath.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mosaic MODIS swaths — process_modis_swath","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_warp.html","id":null,"dir":"Reference","previous_headings":"","what":"Warp MODIS swath data into rectilinear grid raster — process_modis_warp","title":"Warp MODIS swath data into rectilinear grid raster — process_modis_warp","text":"Swath data type MODIS data, curvilinear points stored varying resolution depending relative position sensor axis. type data typically work well planar spatial data, users warp rectify data rectilinear raster. Main procedure done stars::st_warp, users able customize threshold fill potential gaps appear target resolution finer local resolution curvilinear grid points.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_warp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warp MODIS swath data into rectilinear grid raster — process_modis_warp","text":"","code":"process_modis_warp(   path = NULL,   cellsize = 0.25,   threshold = 0.5,   crs = 4326,   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_warp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warp MODIS swath data into rectilinear grid raster — process_modis_warp","text":"path File path MODIS swath exact sub-dataset specification. cellsize numeric(1). Cell size (spatial resolution) output rectilinear grid raster. threshold numeric(1). Maximum distance fill gaps occur. crs integer(1)/character(1). Coordinate system definition. compatible EPSG codes WKT2. See terra::crs sf::st_crs / EPSG ... internal use.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_warp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warp MODIS swath data into rectilinear grid raster — process_modis_warp","text":"stars object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_warp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Warp MODIS swath data into rectilinear grid raster — process_modis_warp","text":"function handles one file time.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/process_modis_warp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Warp MODIS swath data into rectilinear grid raster — process_modis_warp","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_narr.html","id":null,"dir":"Reference","previous_headings":"","what":"Process meteorological data — process_narr","title":"Process meteorological data — process_narr","text":"process_narr() function imports cleans raw meteorological data, returning single SpatRaster object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_narr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process meteorological data — process_narr","text":"","code":"process_narr(   date = c(\"2023-09-01\", \"2023-09-01\"),   variable = NULL,   path = NULL )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_narr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process meteorological data — process_narr","text":"date character(2). length 10 . Format \"YYYY-MM-DD\". variable character(1). Variable name acronym. path character(1). Directory downloaded netCDF (.nc) files.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_narr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process meteorological data — process_narr","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_narr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process meteorological data — process_narr","text":"Layer names returned SpatRaster object contain variable acronym, pressure level, date.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_narr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process meteorological data — process_narr","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nei.html","id":null,"dir":"Reference","previous_headings":"","what":"Process road emissions data — process_nei","title":"Process road emissions data — process_nei","text":"process_tri() function imports cleans raw road emissions data, returning single SpatVector object. NEI data comprises multiple csv files emissions 50+ pollutants recorded county level. raw data files, function join combined table NEI data county boundary, perform spatial join target locations.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process road emissions data — process_nei","text":"","code":"process_nei(path = NULL, county = NULL, year = c(2017, 2020))"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process road emissions data — process_nei","text":"path character(1). Directory NEI csv files. county SpatVector/sf. County boundaries. year integer(1) Year use. Currently 2017 2020 accepted.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nei.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process road emissions data — process_nei","text":"SpatVector object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nei.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process road emissions data — process_nei","text":"Base files county argument can downloaded directly U.S. Census Bureau using tigris package. function reproject census boundaries. Users aware coordinate system census boundary data analyses.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nei.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process road emissions data — process_nei","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nlcd.html","id":null,"dir":"Reference","previous_headings":"","what":"Process land cover data — process_nlcd","title":"Process land cover data — process_nlcd","text":"process_nlcd() function imports cleans raw land cover data, returning single SpatRaster object. Reads NLCD file selected year.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nlcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process land cover data — process_nlcd","text":"","code":"process_nlcd(path = NULL, year = 2021)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nlcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process land cover data — process_nlcd","text":"path character giving nlcd data path year numeric giving year NLCD data used","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nlcd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process land cover data — process_nlcd","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_nlcd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process land cover data — process_nlcd","text":"Eva Marques, Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Process population resolution code — process_sedac_codes","title":"Process population resolution code — process_sedac_codes","text":"Convert full length resolution name /resolution code.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process population resolution code — process_sedac_codes","text":"","code":"process_sedac_codes(string, invert = FALSE)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process population resolution code — process_sedac_codes","text":"string character(1). Resolution name code. invert logical(1). Default = FALSE. invert = TRUE assumes string provides resolution code, returns full length resolution.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_groads.html","id":null,"dir":"Reference","previous_headings":"","what":"Process roads data — process_sedac_groads","title":"Process roads data — process_sedac_groads","text":"process_sedac_groads() function imports cleans raw road data, returning single SpatVector object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_groads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process roads data — process_sedac_groads","text":"","code":"process_sedac_groads(path = NULL)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_groads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process roads data — process_sedac_groads","text":"path character(1). Path geodatabase shapefiles.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_groads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process roads data — process_sedac_groads","text":"SpatVector boject","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_groads.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process roads data — process_sedac_groads","text":"U.S. context.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_groads.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process roads data — process_sedac_groads","text":"Insang Song","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Process population density data — process_sedac_population","title":"Process population density data — process_sedac_population","text":"process_secac_population() function imports cleans raw population density data, returning single SpatRaster object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process population density data — process_sedac_population","text":"","code":"process_sedac_population(path = NULL)"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process population density data — process_sedac_population","text":"path character(1). Path GeoTIFF (.tif) netCDF (.nc) file.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process population density data — process_sedac_population","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_sedac_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process population density data — process_sedac_population","text":"Mitchell Manware","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_tri.html","id":null,"dir":"Reference","previous_headings":"","what":"Process toxic release data — process_tri","title":"Process toxic release data — process_tri","text":"function imports cleans raw toxic release data, returning single SpatVector (points) object selected year.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_tri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process toxic release data — process_tri","text":"","code":"process_tri(   path = NULL,   year = 2018,   variables = c(1, 13, 12, 14, 20, 34, 36, 47, 48, 49),   ... )"},{"path":"https://kyle-messier.github.io/amadeus/reference/process_tri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process toxic release data — process_tri","text":"path character(1). Path directory TRI CSV files year integer(1). Single year select. variables integer. Column index TRI data. ... Placeholders.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_tri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process toxic release data — process_tri","text":"SpatVector object (points) year","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_tri.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Process toxic release data — process_tri","text":"Visit TRI Data Tools view available years variables.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_tri.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Process toxic release data — process_tri","text":"https://www.epa.gov/toxics-release-inventory-tri-program/tri-data--tools","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/process_tri.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process toxic release data — process_tri","text":"Insang Song, Mariana Kassien","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/read_commands.html","id":null,"dir":"Reference","previous_headings":"","what":"Import download commands — read_commands","title":"Import download commands — read_commands","text":"Read download commands .txt file convert character vector.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/read_commands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import download commands — read_commands","text":"","code":"read_commands(commands_path = commands_path)"},{"path":"https://kyle-messier.github.io/amadeus/reference/read_commands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import download commands — read_commands","text":"commands_path file path wget/curl commands","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/read_commands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import download commands — read_commands","text":"character vector containing download commands","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/rename_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename $time — rename_time","title":"Rename $time — rename_time","text":"Rename $time column sftime object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/rename_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename $time — rename_time","text":"","code":"rename_time(x, newname)"},{"path":"https://kyle-messier.github.io/amadeus/reference/rename_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename $time — rename_time","text":"x sftime object newname character new time column name","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/rename_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename $time — rename_time","text":"sftime object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/rename_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename $time — rename_time","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sf_as_mysftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an sf to an sftime — sf_as_mysftime","title":"Convert an sf to an sftime — sf_as_mysftime","text":"Convert sf object sftime object. x must contain time-defining column, identified timename.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sf_as_mysftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an sf to an sftime — sf_as_mysftime","text":"","code":"sf_as_mysftime(x, timename)"},{"path":"https://kyle-messier.github.io/amadeus/reference/sf_as_mysftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an sf to an sftime — sf_as_mysftime","text":"x sf object timename character: name time column x","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sf_as_mysftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an sf to an sftime — sf_as_mysftime","text":"sftime object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sf_as_mysftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an sf to an sftime — sf_as_mysftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_mysftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an sftime to a mysftime — sftime_as_mysftime","title":"Convert an sftime to a mysftime — sftime_as_mysftime","text":"Convert sftime object mysftime object. x must contain time-defining column, identified timename.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_mysftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an sftime to a mysftime — sftime_as_mysftime","text":"","code":"sftime_as_mysftime(x, timename)"},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_mysftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an sftime to a mysftime — sftime_as_mysftime","text":"x sftime object timename character: name time column x","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_mysftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an sftime to a mysftime — sftime_as_mysftime","text":"sftime object specific format","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_mysftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an sftime to a mysftime — sftime_as_mysftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an sftime to an sf — sftime_as_sf","title":"Convert an sftime to an sf — sftime_as_sf","text":"Convert sftime object sf object. x must contain time-defining column, identified timename.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an sftime to an sf — sftime_as_sf","text":"","code":"sftime_as_sf(x, keeptime = TRUE)"},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an sftime to an sf — sftime_as_sf","text":"x sftime object keeptime boolean: TRUE user wants keep time column simple column (default = TRUE)","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an sftime to an sf — sftime_as_sf","text":"sf object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_sf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an sftime to an sf — sftime_as_sf","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatraster.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an sftime to a SpatRaster — sftime_as_spatraster","title":"Convert an sftime to a SpatRaster — sftime_as_spatraster","text":"Convert sftime object SpatRaster object. Returns SpatRatser one layer time step x.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatraster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an sftime to a SpatRaster — sftime_as_spatraster","text":"","code":"sftime_as_spatraster(x, varname)"},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatraster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an sftime to a SpatRaster — sftime_as_spatraster","text":"x sftime object varname variable rasterize","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatraster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an sftime to a SpatRaster — sftime_as_spatraster","text":"SpatRaster object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatraster.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert an sftime to a SpatRaster — sftime_as_spatraster","text":"Running sftime_as_spatraster can take long time x spatially structured.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatraster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an sftime to a SpatRaster — sftime_as_spatraster","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatrds.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an sftime to a SpatRasterDataset — sftime_as_spatrds","title":"Convert an sftime to a SpatRasterDataset — sftime_as_spatrds","text":"Convert sftime object SpatRasterDataset object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatrds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an sftime to a SpatRasterDataset — sftime_as_spatrds","text":"","code":"sftime_as_spatrds(x)"},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatrds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an sftime to a SpatRasterDataset — sftime_as_spatrds","text":"x sftime object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatrds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an sftime to a SpatRasterDataset — sftime_as_spatrds","text":"SpatRasterDataset object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatrds.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert an sftime to a SpatRasterDataset — sftime_as_spatrds","text":"Running sftime_as_spatrds can take long time x spatially temporally structured.","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatrds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an sftime to a SpatRasterDataset — sftime_as_spatrds","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatvector.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an sftime to a SpatVector — sftime_as_spatvector","title":"Convert an sftime to a SpatVector — sftime_as_spatvector","text":"Convert sftime object SpatVector object.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatvector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an sftime to a SpatVector — sftime_as_spatvector","text":"","code":"sftime_as_spatvector(x)"},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatvector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an sftime to a SpatVector — sftime_as_spatvector","text":"x sftime object","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatvector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an sftime to a SpatVector — sftime_as_spatvector","text":"SpatVector object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/sftime_as_spatvector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an sftime to a SpatVector — sftime_as_spatvector","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatraster_as_sftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a SpatRaster to an sftime — spatraster_as_sftime","title":"Convert a SpatRaster to an sftime — spatraster_as_sftime","text":"Convert SpatRaster object sftime object. x must contain time-defining column, identified timename.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatraster_as_sftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a SpatRaster to an sftime — spatraster_as_sftime","text":"","code":"spatraster_as_sftime(x, varname, timename = \"time\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/spatraster_as_sftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a SpatRaster to an sftime — spatraster_as_sftime","text":"x SpatRaster object varname character variable column name sftime timename character time column name sftime (default: \"time\")","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatraster_as_sftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a SpatRaster to an sftime — spatraster_as_sftime","text":"sftime object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/spatraster_as_sftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a SpatRaster to an sftime — spatraster_as_sftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatrds_as_sftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a SpatRasterDataset to an sftime — spatrds_as_sftime","title":"Convert a SpatRasterDataset to an sftime — spatrds_as_sftime","text":"Convert SpatRasterDataset object sftime object. x must contain time-defining column, identified timename.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatrds_as_sftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a SpatRasterDataset to an sftime — spatrds_as_sftime","text":"","code":"spatrds_as_sftime(x, timename = \"time\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/spatrds_as_sftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a SpatRasterDataset to an sftime — spatrds_as_sftime","text":"x SpatRasterDataset object (~ list named SpatRasters) timename character time column name sftime (default: \"time\")","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatrds_as_sftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a SpatRasterDataset to an sftime — spatrds_as_sftime","text":"sftime object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/spatrds_as_sftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a SpatRasterDataset to an sftime — spatrds_as_sftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatvector_as_sftime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a SpatVector to an sftime — spatvector_as_sftime","title":"Convert a SpatVector to an sftime — spatvector_as_sftime","text":"Convert SpatVector object sftime object. x must contain time-defining column, identified timename.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatvector_as_sftime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a SpatVector to an sftime — spatvector_as_sftime","text":"","code":"spatvector_as_sftime(x, timename = \"time\")"},{"path":"https://kyle-messier.github.io/amadeus/reference/spatvector_as_sftime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a SpatVector to an sftime — spatvector_as_sftime","text":"x SpatVector object timename character time column name x (default: \"time\")","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/spatvector_as_sftime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a SpatVector to an sftime — spatvector_as_sftime","text":"sftime object","code":""},{"path":[]},{"path":"https://kyle-messier.github.io/amadeus/reference/spatvector_as_sftime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a SpatVector to an sftime — spatvector_as_sftime","text":"Eva Marques","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/test_download_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Download unit tests — test_download_functions","title":"Download unit tests — test_download_functions","text":"Implement directory, file, download URL unit tests.","code":""},{"path":"https://kyle-messier.github.io/amadeus/reference/test_download_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download unit tests — test_download_functions","text":"","code":"test_download_functions(   directory_to_download = NULL,   directory_to_save = directory_to_save,   commands_path = commands_path,   url_status = url_status )"},{"path":"https://kyle-messier.github.io/amadeus/reference/test_download_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download unit tests — test_download_functions","text":"directory_to_download directory test download directory_to_save directory test saving commands_path file path download commands url_status logical vector URL status = 200","code":""}]
